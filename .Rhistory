vsin <- function(xmat)apply(xmat,1:2,vsin1)
vsin(matrix(1:6,3,2))
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(vsin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(vsin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
ifelse(dirr>0,-1,1)
dirr> 0
dirr> 0 & dirr<.5
vsin <- (function(xx) {yy <- xx%%(2*pi);
#out <- xx
#ifelse(yy<pi/2,yy/(pi/2),0)#if(yy<pi/2)return(yy/(pi/2));
#if(yy<3/2*pi)return(2-yy/(pi/2));
#return(-4+yy/(pi/2));
ifelse(yy<pi/2,yy/(pi/2),0) + ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) + ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
})
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(vsin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(vsin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(vsin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
curve(vsin,0,2*pi)
curve(vsin,-4*pi,4*pi)
curve(vsin,-4*pi,4*pi,n = 1000)
curve(vsin,0,2*pi)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(vsin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(vsin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
fff(1:2,mag,dirr,offset)
fff(1:2,mag,dirr,offset)
fff(1:2,mag,dirr,offset)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10, xcontlim = c(-3,3), ycontlim=c(-3,3))
freq <- sort(ceiling(rexp(M,1/7)))
freq <- sort(ceiling(rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10, xcontlim = c(-3,3), ycontlim=c(-3,3))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10, xcontlim = c(-3,3), ycontlim=c(-3,3))
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10, xcontlim = c(-3,3), ycontlim=c(-3,3))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10, xcontlim = c(-3,3), ycontlim=c(-3,3))
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10, xcontlim = c(-3,3), ycontlim=c(-3,3))
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
RFF_get <- function(D=2, M=30) {
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff1 <- function(x) {RFF(x, mag=mag, dirr=dirr, offset=offset)
}
}
RFF_get
RFF_get()
RFF_get <- function(D=2, M=30) {
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
function(x) {RFF(x, mag=mag, dirr=dirr, offset=offset)
}
}
RFF_get()
contourfilled::contourfilled.func(RFF_get)
contourfilled::contourfilled.func(RFF_get,batchmax = 100)
RFF <- function(x,mag,dirr,offset) {browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
contourfilled::contourfilled.func(RFF_get)
contourfilled::contourfilled.func(RFF_get())
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
RFF_get <- function(D=2, M=30) {
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
function(x) {RFF(x, mag=mag, dirr=dirr, offset=offset)
}
}
contourfilled::contourfilled.func(RFF_get())
contourfilled::contourfilled.func(RFF_get())
contourfilled::contourfilled.func(RFF_get())
contourfilled::contourfilled.func(RFF_get())
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
source('~/Git/DOE-code/RFF_test.R')
shiny::runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
install.packages("top")
install.packages("tgp")
library("tgp")
shiny::runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('sFFLHD.R')
library("UGP")
source("adaptconcept_helpers.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
a$run(2, plotlastonly = T)
a$run(2, plotlastonly = T, noplot=T)
a$run(2, plotlastonly = T, noplot=T)
a$run(2)
