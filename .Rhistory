library(data.tree)
library('data.tree')
install.packages("data.tree")
library('data.tree')
acme <- Node$new('acme inc')
acme
acme$AddChild('bb')
acme
acme$AddChildNode('ccc')
acme$AddChild('ccc')
acme
acme$AddChild('dddd')
acme
acme$Get()
acme$children
e <- acme$AddChild('e')
acme
e$AddChild('ea')
acme
e
acme
acme$children
acme$AddChild(49)
acme
acme$children
names(acme$children)
e$AddChild(c(3,2,4))
e$AddChild(paste(3,2,4))
e
acme
names(e$clone())
names(e$children
)
e$root
e$path
e$parent
e$mat <- matrix(1:6,2,3)
e
acme
e
e$mat
print(acme,mat)
print(acme,'mat')
acme$children
acme$children$e
acme$children$e$49
acme$children$e$`49`
acme$children$e$`49`$parent
acme$children$e$parent
acme$children$e['49']
acme$children$e[['49']]
e$mat
e$Get('mat')
e
e$isLeaf
e$isRoot
acme$children$e[49]
acme$children$e
acme$children$`49`
acme$children
class(acme$children$`49`)
class(e)
acme$children[49]
acme$children['49']
names(acme$children)
e$AddChild(c(1,2))
e
e$AddChild(paste(c(1,2)))
e
matrix(list(),3,2)
matrix(list(a=12),3,2)
matrix(list(a=12,b=44),3,2)
tree
node
Node
print(acme)
print(acme,limit=3)
print(acme,limit=5)
e$fields
e$fieldsAll
acme$fields
acme$fieldsAll
acme$RemoveAttribute()
acme$mat
outer(1:5,1:5,function(a,b){acme$AddChild(paste(a,b))})
acme
acme$AddChild(paste(43,45))
acme
outer(1:5,1:5,function(a,b){acme$AddChild(paste(a,b));T})
outer(1:5,1:5,function(a,b){T})
outer(1:5,1:5,function(a,b){a+b})
outer(1:5,1:5,Vectorize(function(a,b){acme$AddChild(paste(a,b));T}))
acme
acme$mat
acme$mat+1
NULL+1
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
acme$`1 1`
acme[paste(1,1)]
`tl`
`1`
acme$children
acme$children[paste(1,1)]
paste(c(1,2))
paste(c(1,2),collapse = '')
paste(c(1,2),collapse = ' ')
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
is.null(adapt.tree)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree$level
level
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
print(adapt.tree)
print(adapt.tree,'lev')
level
adapt.tree
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
adapt.tree
adapt.tree$samples
adapt.tree
adapt.tree$children
adapt.tree$children(paste(maxmse.ind,collapse = ' '))
adapt.tree$children[paste(maxmse.ind,collapse = ' ')]
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree = adapt.tree$children[paste(maxmse.ind,collapse = ' ')]
adapt.tree
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
adapt.tree
adapt.tree$lev
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
adapt.tree$Ad
class(adapt.tree\)
class(adapt.tree)
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
class(adapt.tree)
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree$children[paste(maxmse.ind,collapse = ' ')]
class(adapt.tree$children[paste(maxmse.ind,collapse = ' ')])
adapt.tree$children[paste(maxmse.ind,collapse = ' ')][[1]]
class(adapt.tree$children[paste(maxmse.ind,collapse = ' ')][[1]])
adapt.tree$children[[paste(maxmse.ind,collapse = ' ')]]
class(adapt.tree$children[[paste(maxmse.ind,collapse = ' ')]])
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
adapt.tree$parent
print(adapt.tree$parent,'samples')
print(adapt.tree$parent,'samples')
print(adapt.tree$root,'samples')
print(adapt.tree$root,'samples')
Aggregate(adapt.tree$root,'samples',sum)
library('data.tree')
acme <- Node$new('acme inc')
acme$AddChild('bb')
acme$AddChild('ccc')
acme$AddChild('dddd')
e <- acme$AddChild('e')
e$AddChild('ea')
acme$AddChild(49)
e$AddChild(paste(3,2,4))
source('~/Git/DOE-code/adaptconcept.R')
gaussian <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree$lev
adapt.tree$level
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree$lev
adapt.tree$level
adapt.tree$level
adapt.tree$lev
adapt.tree$lev
level
adapt.tree
adapt.tree$root
adapt.tree
adapt.tree$samples
adapt.tree
adapt.tree$root
adapt.tree$root$samples
adapt.tree$root$children
adapt.tree$root$children$samples
sapply(adapt.tree$root$children,function(nd){nd$samples})
lapply(adapt.tree$root$children,function(nd){nd$samples})
unlist(lapply(adapt.tree$root$children,function(nd){nd$samples}))
unlist(lapply(adapt.tree$root$children,function(nd){nd$samples}))>=1
unlist(lapply(adapt.tree$root$children,function(nd){nd$samples>=1}))
(lapply(adapt.tree$root$children,function(nd){nd$samples>=1}))
F&T
T&T
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
level
lapply(adapt.tree$parent$parent$children,function(nd){nd$samples>=1}))
lapply(adapt.tree$parent$parent$children,function(nd){nd$samples>=1})
adapt.tree$root
sum(unlist(lapply(adapt.tree$parent$parent$children,function(nd){nd$samples>=1})))
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
sum(unlist(lapply(adapt.tree$parent$parent$children,function(nd){nd$samples>=1})))
g^2
sum(unlist(lapply(adapt.tree$parent$parent$children,function(nd){nd$samples>=1}))) > g^2
?rev
acme
help(acme$AddChild)
acme$AddChild
tcâ‰ 0
tc <- 0
sapply(1:10,function(i){tc <- tc+i})
tc
sapply(1:10,function(i){tc <<- tc+i})
t
tc
acme$AddChildNode('abcd444')
parent
acme$parent
acme$parent$parent
acme$name
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
adapt.tree
print(adapt.tree)
print(adapt.tree,'xlim')
print(adapt.tree,'a')
adapt.tree$xlim
print(adapt.tree,'samples')
print(adapt.tree,'samples')
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
adapt.tree$samples
adapt.tree
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
print(adapt.tree,'samples')
print(adapt.tree,'a')
print(adapt.tree,'a','b')
print(adapt.tree,'samples')
adapt.tree
adapt.tree$root
adapt.tree
adapt.tree$root
print(adapt.tree,'samples')
print(adapt.tree$root,'samples')
adapt.tree
adapt.tree$xlim
xlim
adapt.tree$ylim
ylim
acme
acme$bb
plot(acme)
?apply
acme$count
length(acme$children)
source('~/Git/DOE-code/adaptconcept.R')
acme
child.apply(acme,function(a)a$name)
source('~/Git/DOE-code/adaptconcept.R')
child.apply(acme,function(a)a$name)
acme[[1]]
acme[1]
acme
acme['1']
acme[`1`]
acme[`1`]acme$e
acme$e
acme$children[1]
acme$children[[1]]
source('~/Git/DOE-code/adaptconcept.R')
child.apply(acme,function(a)a$name)
source('~/Git/DOE-code/adaptconcept.R')
child.apply(acme,function(a)a$name)
child.apply(acme,function(a)a$xlim)
acme$children[[2]]
acme$children[[2]][['something']] <- 'ac44'
acme$children[[2]]
acme$children[[2]]$something
source('~/Git/DOE-code/adaptconcept.R')
print(acme,'name2')
child.apply(acme,function(a)paste(a$name,2),T,'name2')
print(acme,'name2')
child.apply(acme,function(a)paste(a$name,2),F)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
child.apply(adapt.tree,function(ND){msfunc(mod.se.pred.func,ND$xlim,ND$ylim)})
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
mses
msesc
adapt.tree$`1 1`$mse
adapt.tree$`paste(1,1)`$mse
adapt.tree$`paste(1,1)`
`1 1`
which.min(c(3,4,1,6,2))
which.min(c(3,4,1,6,2,1))
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
mses
msesc
child.apply(adapt.tree,function(ND){msfunc(mod.se.pred.func,ND$xlim,ND$ylim)},T,'mse',mi=T)
child.apply(adapt.tree,function(ND){msfunc(mod.se.pred.func,ND$xlim,ND$ylim)},T,'mse',min.return=T)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
mses
msesc
child.apply(adapt.tree,function(ND){msfunc(mod.se.pred.func,ND$xlim,ND$ylim)},T,'mse',min.return=T)
maxN
adapt.tree$children
adapt.tree$children[[1]]
adapt.tree$children[[c(1,3)]]
adapt.tree$children[c(1,3)]
source('~/Git/DOE-code/adaptconcept.R')
maxN(c(3,5,1,6,2),2)
maxN(c(3,5,1,6,2),2,T)
source('~/Git/DOE-code/adaptconcept.R')
maxN(c(3,5,1,6,2),2,T)
source('~/Git/DOE-code/adaptconcept.R')
maxN(c(3,5,1,6,2),2,T)
order(4:1,partial=2)
?sort
source('~/Git/DOE-code/adaptconcept.R')
order(4:1,partial=2)
maxN(c(3,5,1,6,2),2,T)
maxN(c(3,5,1,6,2),2)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
child.apply(adapt.tree,function(ND){msfunc(mod.se.pred.func,ND$xlim,ND$ylim)},T,'mse')
print(adapt.tree,'mse')
acme$path
acme$Climb
acme$isRoot
acme$parent
acme$parent$isRoot
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
acme
acme[[4]]
acme$children[[4]]
acme$children[[4]]$children[[2]]
ancestor.apply(acme$children[[4]]$children[[2]],function(nn){nn$ancestortest = 'working'})
print(acme,'ancestortest')
source('~/Git/DOE-code/adaptconcept.R')
ancestor.apply(acme$children[[4]]$children[[2]],function(nn){nn$ancestortest = 'working2'})
print(acme,'ancestortest')
ancestor.apply(acme$children[[4]]$children[[2]],function(nn){nn$ancestortest = 'working3'})
print(acme,'ancestortest')
acme$children[[4]]$children[[2]]
source('~/Git/DOE-code/adaptconcept.R')
ancestor.apply(acme$children[[4]]$children[[2]],function(nn){nn$ancestortest = 'working4'})
print(acme,'ancestortest')
acme$pathString
acme$path
acme$children[[4]]$children[[2]]$path
acme$children[[4]]$children[[2]]$pathString
ancestor.apply(acme,function(nn){nn$ancestortest = 'working4'})
source('~/Git/DOE-code/adaptconcept.R')
ancestor.apply(acme,function(nn){nn$ancestortest = 'working4'})
nd$isRoot
sap
c()
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
maxmse.2nodes
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
nd$isRoot
max(ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND)}))
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
adapt.concept2(gaussian,g=3)
adapt.concept2(gaussian,g=3)
X
Z
xlim
ylim
adapt.concept2(gaussian,g=3)
maxmse.ind
mses
maxmse
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
X
Z
print(adapt.tree)
print(adapt.tree$root)
print(adapt.tree$root,'samples')
nd$maxmse
nd$maxmse.name
nd[nd$maxmse.name]
nd$children[[nd$maxmse.name]]
nd$children[[nd$maxmse.name]]$mse
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
nd$maxmse
max(ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND)}))
?apply
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
mod
ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND,mod)})
source('~/Git/DOE-code/adaptconcept.R')
c
adapt.concept2(gaussian,g=3)
ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND,mod)})
nd$maxmse
ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND,mod)})
nd$maxmse
ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND,mod)})
nd$maxmse
ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND,mod)})
nd$maxmse
ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND,mod)})
nd$maxmse
source('~/Git/DOE-code/adaptconcept.R')
paste(1,2:3)
paste(1,2:3,collapse='')
paste(1,2:3)
cat(1,2:3)
cat(1,2:3) -> ttext
ttext
?cat
paste(1,2:3,collapse=' ')
paste(1,2:3,collapse=' ',sep=' ')
paste(c(1,2:3),collapse=' ')
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
second.maxmse.child
print(adapt.tree,'mse')
contourfilled.func(function(xx){exp(xx[1])})
contourfilled.func(function(xx){exp(xx[1])*sum(sin(2*pi*xx))})
contourfilled.func(function(xx){exp(xx[1])*sum(sin(2*pi*xx*3))})
contourfilled.func(function(xx){exp(2*xx[1])*sum(sin(2*pi*xx*3))})
contourfilled.func(function(xx){exp(2*xx[1])*sum(sin(2*pi*xx*2))})
contourfilled.func(function(xx){exp(2*xx[1])*sum(sin(2*pi*xx*2))+xx[1]})
contourfilled.func(function(xx){exp(2*xx[1])*sum(sin(2*pi*xx*2))+xx[1]*4})
contourfilled.func(function(xx){exp(2*xx[1])*sum(sin(2*pi*xx*2))+xx[1]*40})
contourfilled.func(function(xx){exp(2*sqrt(xx[1]))*sum(sin(2*pi*xx*2))+xx[1]*40})
contourfilled.func(function(xx){exp(2*xx[1])*sum(sin(2*pi*xx*2))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*2))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 1/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){1/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 10/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 30/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 100/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 500/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-xx[[1]]))})
rastimoid <- function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-xx[[1]]))}; contourfilled.func(rastimoid)
adapt.concept2(rastimoid)
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(rastimoid)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(rastimoid)
banana <- function(xx){exp(-.5*(xx[1]*80-40)^2/100-.5*((xx[2]*30-20)+.03*(xx[1]*80-40)^2-3)^2)}
contourfilled.func(banana)
adapt.concept2(banana)
