}
pred(.5)
curve(pred(x), 0, 1)
points(x,y,col=2)
gauss_cor <- function(a, b, th=.5) {
exp(-(a-b)^2 / th)
}
gauss_cor_mat <- function(x, x2=x) {#browser()
outer(x,x2, gauss_cor)
}
pred <- function(xx) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x)
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
kx.xx %*% solve(kx + 1e-1, y)
}
pred(.5)
curve(pred(x), 0, 1)
points(x,y,col=2)
gauss_cor <- function(a, b, th=.25) {
exp(-(a-b)^2 / th)
}
gauss_cor_mat <- function(x, x2=x) {#browser()
outer(x,x2, gauss_cor)
}
pred <- function(xx) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x)
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
kx.xx %*% solve(kx + 1e-1, y)
}
pred(.5)
curve(pred(x), 0, 1)
points(x,y,col=2)
gauss_cor <- function(a, b, th=.05) {
exp(-(a-b)^2 / th)
}
gauss_cor_mat <- function(x, x2=x) {#browser()
outer(x,x2, gauss_cor)
}
pred <- function(xx) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x)
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
kx.xx %*% solve(kx + 1e-1, y)
}
pred(.5)
curve(pred(x), 0, 1)
points(x,y,col=2)
gauss_cor <- function(a, b, th=.05) {
exp(-(a-b)^2 / th)
}
gauss_cor_mat <- function(x, x2=x) {#browser()
outer(x,x2, gauss_cor)
}
pred <- function(xx) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x)
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
kx.xx %*% solve(kx + 1e-1, y)
}
pred(.5)
curve(pred(x), 0, 1)
points(x,y,col=2)
gauss_cor <- function(a, b, th=.01) {
exp(-(a-b)^2 / th)
}
gauss_cor_mat <- function(x, x2=x) {#browser()
outer(x,x2, gauss_cor)
}
pred <- function(xx) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x)
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
kx.xx %*% solve(kx + 1e-1, y)
}
pred(.5)
curve(pred(x), 0, 1)
points(x,y,col=2)
gauss_cor <- function(a, b, th=.001) {
exp(-(a-b)^2 / th)
}
gauss_cor_mat <- function(x, x2=x) {#browser()
outer(x,x2, gauss_cor)
}
pred <- function(xx) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x)
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
kx.xx %*% solve(kx + 1e-1, y)
}
pred(.5)
curve(pred(x), 0, 1)
points(x,y,col=2)
gauss_cor <- function(a, b, th=10) {
exp(-(a-b)^2 / th)
}
gauss_cor_mat <- function(x, x2=x) {#browser()
outer(x,x2, gauss_cor)
}
pred <- function(xx) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x)
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
kx.xx %*% solve(kx + 1e-1, y)
}
pred(.5)
curve(pred(x), 0, 1)
points(x,y,col=2)
pred <- function(xx) {browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x)
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
kx.xx %*% solve(kx + 1e-1, y)
}
pred(.5)
kx
eigen(kx)
eigen(kx)$val
eigen(kx+1)$val
eigen(kx+10)$val
eigen(kx+100)$val
eigen(kx+1e5)$val
eigen(kx+1e8)$val
eigen(kx+1e12)$val
eigen(kx+1e20)$val
diag(1e-3)
diag(1e-3,c(3,3))
diag(1e-3,dim(matrix(0,2,4))
)
diag(1e-3,c(3,5)
)
diag(1e-3,5)
pred <- function(xx) {browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x)
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
kx.xx %*% solve(kx + diag(1e-3,nrow(kx)), y)
}
pred(.5)
curve(pred(x), 0, 1)
points(x,y,col=2)
pred <- function(xx) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x)
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
kx.xx %*% solve(kx + diag(1e-3,nrow(kx)), y)
}
pred(.5)
curve(pred(x), 0, 1)
points(x,y,col=2)
gauss_cor <- function(a, b, th=1) {
exp(-(a-b)^2 / th)
}
gauss_cor_mat <- function(x, x2=x) {#browser()
outer(x,x2, gauss_cor)
}
pred <- function(xx) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x)
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
kx.xx %*% solve(kx + diag(1e-3,nrow(kx)), y)
}
pred(.5)
curve(pred(x), 0, 1)
points(x,y,col=2)
pred <- function(xx, nug=1e-6) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x) + diag(nug,nrow(kx))
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
mn = kx.xx %*% solve(kx, y)
se <- kxx - kx.xx * solve()
}
pred(.5)
curve(pred(x), 0, 1)
pred <- function(xx, nug=1e-6) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x) + diag(nug,nrow(length(x)))
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
mn = kx.xx %*% solve(kx, y)
se <- kxx - kx.xx * solve()
}
pred(.5)
curve(pred(x), 0, 1)
points(x,y,col=2)
pred <- function(xx, nug=1e-6) {browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x) + diag(nug,nrow(length(x)))
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
mn = kx.xx %*% solve(kx, y)
se <- kxx - kx.xx * solve()
}
pred(.5)
x
gauss_cor_mat(x)
pred <- function(xx, nug=1e-6) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x) + diag(nug,(length(x)))
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
mn = kx.xx %*% solve(kx, y)
se <- kxx - kx.xx * solve()
}
pred(.5)
curve(pred(x), 0, 1)
pred <- function(xx, nug=1e-6) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x) + diag(nug,(length(x)))
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
mn = kx.xx %*% solve(kx, y)
se <- kxx - kx.xx * solve(kx, kx.xx)
list(mean=mn, se=se)
}
pred(.5)
pred <- function(xx, nug=1e-6) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x) + diag(nug,(length(x)))
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
mn = kx.xx %*% solve(kx, y)
se <- kxx - kx.xx * solve(kx, t(kx.xx))
list(mean=mn, se=se)
}
pred(.5)
pred <- function(xx, nug=1e-6) {browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x) + diag(nug,(length(x)))
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
mn = kx.xx %*% solve(kx, y)
se <- kxx - kx.xx * solve(kx, t(kx.xx))
list(mean=mn, se=se)
}
pred(.5)
kx
kx.xx
solve(kx, t(kx.xx))
kx.xx
kx.xx %*%solve(kx, t(kx.xx))
kxx - kx.xx %*%solve(kx, t(kx.xx))
pred <- function(xx, nug=1e-6) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x) + diag(nug,(length(x)))
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
mn = kx.xx %*% solve(kx, y)
se <- kxx - kx.xx %*% solve(kx, t(kx.xx))
list(mean=mn, se=se)
}
pred(.5)
curve(pred(x)$me, 0, 1)
points(x,y,col=2)
prd <- pred(x)
curve(prd$me, 0, 1)
z <- seq(0,1,length.out = 100)
prd <- pred(z)
curve(z,prd$me, 0, 1)
plot(z,prd$me, 0, 1)
z
prd$me
plot(z,prd$me)
plot(z,prd$me, type='l')
z <- seq(0,1,length.out = 200)
prd <- pred(z)
plot(z,prd$me, type='l')
points(z,prd$me + prd$se, 0, 1, col=2)
prd
prd$mean
dim(prd$se)
diag(prd$se)
pred <- function(xx, nug=1e-6) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x) + diag(nug,(length(x)))
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
mn = kx.xx %*% solve(kx, y)
se <- diag(kxx - kx.xx %*% solve(kx, t(kx.xx)))
list(mean=mn, se=se)
}
pred(.5)
curve(pred(x)$me, 0, 1)
points(x,y,col=2)
z <- seq(0,1,length.out = 200)
prd <- pred(z)
plot(z,prd$me, type='l')
points(z,prd$me + prd$se, 0, 1, col=2)
points(z,prd$me - prd$se, 0, 1, col=2)
points(x,y,col=3)
plot(z,prd$me, type='l')
points(z,prd$me + prd$se, 0, 1, col=2)
str(z)
prd$me + prd$se
str(prd$me + prd$se)
str(z)
str(c(prd$me + prd$se))
points(z,prd$me + prd$se, 0, 1, col=2)
points(z,c(prd$me + prd$se), 0, 1, col=2)
plot(z,prd$me, type='l')
points(z,prd$me + prd$se, col=2)
points(z,prd$me - prd$se, col=2)
plot(z,prd$me, type='l')
points(z,prd$me + prd$se, col=2, type='l')
points(z,prd$me - prd$se, col=2, type='l')
y <- sin(2*pi*x)+floor(4*x)
plot(x,y)
z <- seq(0,1,length.out = 200)
prd <- pred(z)
plot(z,prd$me, type='l')
points(z,prd$me + prd$se, col=2, type='l')
points(z,prd$me - prd$se, col=2, type='l')
points(x,y,col=3)
gauss_cor <- function(a, b, th=5) {
exp(-(a-b)^2 / th)
}
gauss_cor_mat <- function(x, x2=x) {#browser()
outer(x,x2, gauss_cor)
}
pred <- function(xx, nug=1e-6) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x) + diag(nug,(length(x)))
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
mn = kx.xx %*% solve(kx, y)
se <- diag(kxx - kx.xx %*% solve(kx, t(kx.xx)))
list(mean=mn, se=se)
}
pred(.5)
curve(pred(x)$me, 0, 1)
points(x,y,col=2)
z <- seq(0,1,length.out = 200)
prd <- pred(z)
plot(z,prd$me, type='l')
points(z,prd$me + prd$se, col=2, type='l')
points(z,prd$me - prd$se, col=2, type='l')
points(x,y,col=3)
gauss_cor <- function(a, b, th=.05) {
exp(-(a-b)^2 / th)
}
gauss_cor_mat <- function(x, x2=x) {#browser()
outer(x,x2, gauss_cor)
}
pred <- function(xx, nug=1e-6) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x) + diag(nug,(length(x)))
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
mn = kx.xx %*% solve(kx, y)
se <- diag(kxx - kx.xx %*% solve(kx, t(kx.xx)))
list(mean=mn, se=se)
}
pred(.5)
curve(pred(x)$me, 0, 1)
points(x,y,col=2)
z <- seq(0,1,length.out = 200)
prd <- pred(z)
plot(z,prd$me, type='l')
points(z,prd$me + prd$se, col=2, type='l')
points(z,prd$me - prd$se, col=2, type='l')
points(x,y,col=3)
pred <- function(xx, nug=1e-6) {#browser()
#covmat <- gauss_cor(c(x, xx))
kx <- gauss_cor_mat(x) + diag(nug,(length(x)))
kxx <- gauss_cor_mat(xx)
kx.xx <- gauss_cor_mat(xx, x)
mn = kx.xx %*% solve(kx, y)
se <- .1 * diag(kxx - kx.xx %*% solve(kx, t(kx.xx)))
list(mean=mn, se=se)
}
pred(.5)
curve(pred(x)$me, 0, 1)
points(x,y,col=2)
z <- seq(0,1,length.out = 200)
prd <- pred(z)
plot(z,prd$me, type='l')
points(z,prd$me + prd$se, col=2, type='l')
points(z,prd$me - prd$se, col=2, type='l')
points(x,y,col=3)
source('~/Git/DOE-code/adaptconcept2_sFFLHD_RC.R')
source('sFFLHD.R')
library("UGP")
source("adaptconcept_helpers.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
source("RFF_test.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
a$run(2)
a$run(6, plotlastonly = T)
a$run(6, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
source('~/Git/DOE-code/adaptconcept2_sFFLHD_RC.R')
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get(M=200))
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get(M=200))
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get(M=2000))
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get(M=2))
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(20, plotlastonly = T)
a$run(20, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get())
a$run(2, plotlastonly = T)
a$run(2, plotlastonly = T)
a$run(2, plotlastonly = T)
a$run(2, plotlastonly = T)
a$run(2, plotlastonly = T)
a$run(2, plotlastonly = T)
DiceOptim::EI
install.packages(c("curl", "mgcv", "RcppArmadillo"))
dir()
source("/Users/collin/git/DOE-code/adaptconcept2_sFFLHD_RC.R")
interactive()
source('~/Git/DOE-code/adaptconcept2_sFFLHD_RC.R')
print(interactive())
source('~/Git/DOE-code/adaptconcept2_sFFLHD_RC.R')
source("/Users/collin/git/DOE-code/adaptconcept2_sFFLHD_RC.R")
1280*1.25
shiny::runApp('shiny/adaptconcept2_sFFLHD_RC')
runApp('shiny/adaptconcept2_sFFLHD_RC')
runApp('shiny/adaptconcept2_sFFLHD_RC')
source('~/Git/DOE-code/adaptconcept2_sFFLHD_RC.R')
source('sFFLHD.R')
library("UGP")
source("adaptconcept_helpers.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
source("RFF_test.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept2_sFFLHD_RC.R')
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1)
a$run(2)
runApp('shiny/adaptconcept2_sFFLHD_RC')
runApp('shiny/adaptconcept2_sFFLHD_RC')
