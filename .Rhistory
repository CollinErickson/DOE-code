source('~/Git/DOE-code/adaptconcept.R')
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/sFFLHD.R')
s <- sFFLHD.seq$new(D=2,L=3)
s
s$get.batch()
s$get.batch()
s <- sFFLHD.seq$new(D=2,L=3)
plot(s$get.batch(),xlim=0:1,ylim=0:1,pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batch(),pch=19)
abline(h=(0:(s$Lb))/s$Lb,v=(0:(s$Lb))/s$Lb,col=3);points(s$get.batches.to.golden(),pch=19)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source('~/Git/DOE-code/LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/adaptconcept.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
adapt.concept.sFFLHD(gaussian1)
adapt.concept.sFFLHD(gaussian1)
adapt.concept.sFFLHD(gaussian1)
rastimoid <- function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-xx[[1]]))}; contourfilled.func(rastimoid)
rastimoid <- function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-xx[[1]]))}; contourfilled.func(rastimoid)
adapt.concept2(rastimoid)
adapt.concept.sFFLHD(rastimoid)
rastimoid <- function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-8*xx[[1]]))}; contourfilled.func(rastimoid)
rastimoid <- function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-8*(xx[[1]]-.5)))}; contourfilled.func(rastimoid)
rastimoid <- function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(rastimoid)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
rastimoid <- function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(rastimoid)
adapt.concept.sFFLHD(rastimoid)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/LHS.R')
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/LHS.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
adapt.concept.sFFLHD(gaussian1)
adapt.concept.sFFLHD(gaussian1)
mod$predict
mod$predict(matrix(runif(8),4,2))
mod$mod
adapt.concept.sFFLHD(gaussian1)
mod$mod
mod$mod
mod$X
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
library("sFFLHD.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
source("sFFLHD.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
adapt.concept.sFFLHD(gaussian1)
source("sFFLHD.R")
require(mlegp)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
mod
mod$mod
mod$mod[[1]]
contourfilled.func(mod$predict)
source("adaptconcept.R")
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source("sFFLHD.R")
require(mlegp)
require(contourfilled)
source('LHS.R')
source("adaptconcept.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
adapt.concept.sFFLHD(gaussian1)
mod$predict(matrix(runif(8),4,2))
mod$predict.se2(matrix(runif(8),4,2))
mod$predict.var2(matrix(runif(8),4,2))
mod$predict.var2(matrix(runif(8),4,2))
mod$predict.var2(matrix(runif(8),4,2))
mod$predict.var2(matrix(runif(8),4,2))
mod$predict.se2(matrix(runif(8),4,2))
mod$predict.se2(matrix(runif(8),4,2))
mod$predict.se2(matrix(runif(8),4,2))^2
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source("sFFLHD.R")
require(mlegp)
require(contourfilled)
source('LHS.R')
source("adaptconcept.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
adapt.concept.sFFLHD(gaussian1)
c
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source("sFFLHD.R")
require(mlegp)
require(contourfilled)
source('LHS.R')
source("adaptconcept.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source("sFFLHD.R")
require(mlegp)
require(contourfilled)
source('LHS.R')
source("adaptconcept.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
lims
d
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
d
adapt.concept.sFFLHD(gaussian1,d=2)
d
lims
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
is.in.lim(c(.5,.5,.5),matrix(c(0,1,0,1,0,1),3,2,byrow=T))
is.in.lim(c(.5,.5,.5),lims=matrix(c(0,1,0,1,0,1),3,2,byrow=T))
is.in.lim(c(.5,.5,.5),lims=matrix(c(0,1,0,1,0,.3),3,2,byrow=T))
is.in.lim(c(.5,.5,.5),lims=matrix(c(0,1,0,1,0.7,1),3,2,byrow=T))
is.in.lim(c(.5,.5,.5),lims=matrix(c(0,1,0,1,0,1),3,2,byrow=T))
is.in.lim(c(.5,.5,.5),lims=matrix(c(0,1,0,.1,0,1),3,2,byrow=T))
is.in.lim(c(.5,.5,.5),lims=matrix(c(0,.1,0,1,0,1),3,2,byrow=T))
is.in.lim(c(.5,.5,.5),lims=matrix(c(0,1,0,1,0,1),3,2,byrow=T))
is.in.lim(c(.5,.5,.5),lims=matrix(c(0,1,0.7,1,0,1),3,2,byrow=T))
is.in.lim(c(.5,.5,.5),lims=matrix(c(0.8,1,0,1,0,1),3,2,byrow=T))
all(c(T,T,T),c(T,T,F))
all(c(T,T,T),c(T,T,T))
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
adapt.concept.sFFLHD(gaussian1,d=2)
lims
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
D
lims
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
dat
Xnew
lims
dat
?outer
1:3 %o% 1:3 %o% 1:3
array(dim=c(2,3,4))
array(dim=c(2,3,4,5))
array(dim=c(2,3,4,5,2))
array(dim=c(2,3,4,5,2,3,2,3,2,3))
ta <- array(dim=c(2,3,4,5))
dim(ta)
apply(ta,1:4,sum)
dim(apply(ta,1:4,sum))
tf <- function(...){c(...)}
tf(1,2,3)
tf <- function(...){sum(...)}
tf(1,2,3)
tf <- function(...){x <- (...);x}
tf(1,2,3)
tf <- function(...){x <- c(...);x}
tf(1,2,3)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
mses.grid.blank
g
D
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
adapt.concept.sFFLHD(gaussian1,D=2)
lims
adapt.concept.sFFLHD(gaussian1,D=2)
sapply(1:D,function(jj){
lims[jj,1]+(lims[jj,2]-lims[jj,1])*c(ii[jj]-1,ii[jj])/g
})
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
c(...)
list(..)
list(...)
ii
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
c(...)
tm
ta
tm <- matrix(1:6,2,3)
tm
apply(tm,1,function(a){a})
apply(tm,1,function(a){sum(a)})
apply(tm,1:2,function(a){sum(a)})
apply(tm,1:2,function(...){c(...)})
apply(tm,1:2,function(...){c(...)})
outer(1:2,1:2,c)
outer(1:2,1:2,list)
outer
outer(tm,tm)
outer(1:3,1:3,paste)
outer(1:3,1:3,vector)
outer(1:3,1:3,as.vector)
outer(1:3,1:3,function(...)as.vector(c(...)))
outer(1:3,1:3,Vectorize(function(...)as.vector(c(...))))
outer(1:3,1:3,list)
outer(1:3,1:3,Vectorize(list))
array(2*3*4,c(2,3,4))
array(1:(2*3*4),c(2,3,4))
array(1:(2*3*4),c(2,3,4),byrow=T)
...
13%/%2
source('~/.active-rstudio-document')
outer.inttoind(17,c(2,2,2,2,2))
source('~/.active-rstudio-document')
outer.inttoind(17,c(2,2,2,2,2))
outer.inttoind(3,c(2,2,2,2,2))
outer.inttoind(1,c(2,2,2,2,2))
outer.inttoind(2,c(2,2,2,2,2))
outer.inttoind(4,c(2,2,2,2,2))
outer.inttoind(5,c(2,2,2,2,2))
outer.inttoind(6,c(2,2,2,2,2))
source('~/.active-rstudio-document')
outer.inttoind(17,c(2,2,2,2,2))
outer.inttoind(6,c(2,2,2,2,2))
source('~/.active-rstudio-document')
outer.inttoind(17,c(2,2,2,2,2))
for(i in 1:2^5) print(c(i,outer.inttoind(i,c(2,2,2,2,2))))
source('~/.active-rstudio-document')
for(i in 1:2^5) print(c(i,outer.inttoind(i,c(2,2,2,2,2))))
source('~/.active-rstudio-document')
outer.d1n(2,3,4,func=mean)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
outer.d1n(2,3,4,func=mean)
outer.d1n(2,3,4,func=sum)
outer.d1n(2,3,4,func=paste)
outer.d1n(2,3,4,func=mean)
outer.d1n(2,3,4,func=function(aa){100*aa[1]+10*aa[2]+a[3]})
outer.d1n(2,3,4,func=function(aa){100*aa[1]+10*aa[2]+aa[3]})
source('~/.active-rstudio-document')
outer.d1n(2,3,4,func=function(aa){100*aa[1]+10*aa[2]+aa[3]})
outer.d1n(rep(2,3),func=function(aa){100*aa[1]+10*aa[2]+aa[3]})
aperm(outer.d1n(rep(2,3),func=function(aa){100*aa[1]+10*aa[2]+aa[3]}))
ta
ta <- array(1:24,c(4,3,2))
ta
apply(ta,3,t)
aperm(outer.d1n(rep(2,3),func=function(aa){100*aa[1]+10*aa[2]+aa[3]}),c(2,1,3))
outer.d1n(rep(2,3),func=function(aa){100*aa[1]+10*aa[2]+aa[3]})
rep(3)
rep(3,3)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
c(...)
ii
msfunc(mod.se.pred.func,
sapply(1:D,function(jj){
lims[jj,1]+(lims[jj,2]-lims[jj,1])*c(ii[jj]-1,ii[jj])/g
}))
lims
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
c
adapt.concept.sFFLHD(gaussian1,D=2)
lims
sapply(1:3,function(a)c(a,a,a,a))
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
lims
lims
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
mses.grid
mses
maxmse.ind
lims.next[,1]+(lims.next[,2]-lims.next[,1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
lims.next
adapt.concept.sFFLHD(gaussian1,D=2)
mse.grid
mses.grid
mses
mses
maxmse.ind
lims.next
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
maxmse.ind
lims.next
lims.next[maxmse.ind[2],] <- lims.next[maxmse.ind[2],1]+(lims.next[maxmse.ind[2],2]-lims.next[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
lims.next
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=2)
UGP$new()
UGP::UGP$new()
UGP::UGP$new(package='abc')
UGP::UGP(package='abc')
UGP::UGP(package='GPfit')
dat
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=3)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=3)
Xnew
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=3)
dat$Xnotrun
dat$X
mses
mses.grid
maxmse
maxmse.ind
lims.next
lims
lims.second
adapt.concept.sFFLHD(gaussian1,D=3)
mses
maxmse.ind
secondmaxmse.ind
lims.next
lims.nextsecond
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=3)
mses
lims.next
lims.nextsecond
lims
lims.second
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=3)
lims
lims.second
lims.second[1]
lims.second[[1]]
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=3)
lims.second
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=3)
sapply(1:(level-1),function(i){msfunc(mod.se.pred.func,lims.second[[i]])})
level
lims.second
lims.second
level
lims.second
lims
adapt.concept.sFFLHD(gaussian1,D=4)
lims
lims
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1,D=3)
lims
lims
lims.second
lim
lims
tl <- list(2,55)
tl
tl[[1]] <- NULL
tl
tl
tl[[6]] <- runif(9)
tl
length(tl)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
require(GPfit)
install.packages("GPfit")
require(GPfit)
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
dat$X
source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
source("adaptconcept.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
Xnew
dat$X
contourfilled.func(mod$predict)
system.time(contourfilled.func(mod$predict))
system.time(contourfilled.func(mod$predict,batchmax = 100))
system.time(contourfilled.func(mod$predict,batchmax = 100000))
system.time(contourfilled.func(mod$predict,batchmax = 1000))
system.time(contourfilled.func(mod$predict,batchmax = 500))
system.time(contourfilled.func(mod$predict,batchmax = 300))
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
contourfilled.func(mod$predict.se,batchmax=500)
system.time(contourfilled.func(mod$predict.se,batchmax=500))
system.time(contourfilled.func(mod$predict.se,batchmax=5))
system.time(contourfilled.func(mod$predict.se,batchmax=1))
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
source("adaptconcept.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
contourfilled.func(mod$predict)
contourfilled.func(mod$predict,batchmax=1)
system.time(contourfilled.func(mod$predict,batchmax=1))
system.time(contourfilled.func(mod$predict,batchmax=1000))
system.time(contourfilled.func(mod$predict,batchmax=100))
system.time(contourfilled.func(mod$predict,batchmax=10))
system.time(contourfilled.func(mod$predict,batchmax=500))
contourfilled.func(mod$predict.se,batchmax=500)
adapt.concept.sFFLHD(gaussian1)
adapt.concept.sFFLHD(gaussian1)
adapt.concept.sFFLHD(gaussian1)
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
X1
func1
func1(X1[1,])
X1[1,]
func1(X1)
source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
source("adaptconcept.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
lims
pow
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
pow
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
adapt.concept.sFFLHD(gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
matrix(0,0,0)
rbind(matrix(0,0,0),matrix(1:3,3,1)
)
rbind(matrix(0,0,1),matrix(1:3,3,1))
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
UGP
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
