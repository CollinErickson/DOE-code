M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
fff(1:2,mag,dirr,offset)
fff(1:2,mag,dirr,offset)
fff(1:2,mag,dirr,offset)
nsin <- function(xx) {-1+2*ceiling(sin(xx))} # block wave
vsin <- function(xx) { # v/w wave
yy <- xx%%(2*pi)
ifelse(yy<pi/2,yy/(pi/2),0) +
ifelse(yy>=pi/2 & yy<3*pi/2,2-yy/(pi/2),0) +
ifelse(yy>=3*pi/2,-4+yy/(pi/2),0)
}
D <- 2
M <- 30
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(fff(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10)
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10, xcontlim = c(-3,3), ycontlim=c(-3,3))
freq <- sort(ceiling(rexp(M,1/7)))
freq <- sort(ceiling(rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10, xcontlim = c(-3,3), ycontlim=c(-3,3))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10, xcontlim = c(-3,3), ycontlim=c(-3,3))
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10, xcontlim = c(-3,3), ycontlim=c(-3,3))
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10, xcontlim = c(-3,3), ycontlim=c(-3,3))
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
if(D==2)contourfilled::contourfilled.func(function(xx){fff(xx,mag,dirr,offset)},batchmax = 10, xcontlim = c(-3,3), ycontlim=c(-3,3))
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
#mag <- matrix(runif(M,-1,1),ncol=1)
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
RFF_get <- function(D=2, M=30) {
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
fff1 <- function(x) {RFF(x, mag=mag, dirr=dirr, offset=offset)
}
}
RFF_get
RFF_get()
RFF_get <- function(D=2, M=30) {
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
function(x) {RFF(x, mag=mag, dirr=dirr, offset=offset)
}
}
RFF_get()
contourfilled::contourfilled.func(RFF_get)
contourfilled::contourfilled.func(RFF_get,batchmax = 100)
RFF <- function(x,mag,dirr,offset) {browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
contourfilled::contourfilled.func(RFF_get)
contourfilled::contourfilled.func(RFF_get())
RFF <- function(x,mag,dirr,offset) {#browser()
#x <- matrix(x,ncol=2)
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
}
if (D==1)curve(RFF(x,mag,dirr,offset))
if(D==2)contourfilled::contourfilled.func(function(xx){RFF(xx,mag,dirr,offset)},batchmax = 10)
RFF_get <- function(D=2, M=30) {
freq <- sort((rexp(M,1/7)))
mag <- matrix(sapply(1:M,function(i){runif(1,-1/freq[i],1/freq[i])}), ncol=1)
dirr <- matrix(runif(D*M,-1,1),ncol=D)
dirrnorm <- apply(dirr,1,function(a)sqrt(sum(a^2)))
dirr <- sweep(dirr,1,dirrnorm,'/')
offset <- runif(M)
function(x) {RFF(x, mag=mag, dirr=dirr, offset=offset)
}
}
contourfilled::contourfilled.func(RFF_get())
contourfilled::contourfilled.func(RFF_get())
contourfilled::contourfilled.func(RFF_get())
contourfilled::contourfilled.func(RFF_get())
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
contourfilled::contourfilled.func(RFF_get(),batchmax=500)
source('~/Git/DOE-code/RFF_test.R')
shiny::runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
install.packages("top")
install.packages("tgp")
library("tgp")
shiny::runApp('shiny/adaptconcept_sFFLHD_RC')
runApp('shiny/adaptconcept_sFFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('sFFLHD.R')
library("UGP")
source("adaptconcept_helpers.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
a$run(2, plotlastonly = T)
a$run(2, plotlastonly = T, noplot=T)
a$run(2, plotlastonly = T, noplot=T)
a$run(2)
source('~/.active-rstudio-document')
source('sFFLHD.R')
library("UGP")
source("adaptconcept_helpers.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC.noadapt(D=2,L=3,g=3,func=gaussian1)
a$run(1)
source('~/.active-rstudio-document')
a <- adapt.concept.sFFLHD.RC.noadapt(D=2,L=3,g=3,func=gaussian1)
a$run(1)
a$run(1)
a$run(5,plotlastonly = T)
a$run(5,plotlastonly = T)
a$run(5,plotlastonly = T)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
compare.adapt(func=gaussian1, D=2, L=4, g=3)
compare.adapt(func=gaussian1, D=2, L=4, g=3)
source('~/Git/DOE-code/RFF_test.R')
source('~/.active-rstudio-document')
compare.adapt(func=RFF_get(), D=2, L=4, g=3)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=20)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=20)
source('~/.active-rstudio-document')
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=20)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=20)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=20)
test_data <- data.frame(
var0 = 100 + c(0, cumsum(runif(49, -20, 20))),
var1 = 150 + c(0, cumsum(runif(49, -10, 10))),
date = seq.Date(as.Date("2002-01-01"), by="1 month", length.out=100))
test_data
install.packages("reshape2")
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
test_data_long <- melt(test_data, id="date")  # convert to long format
ggplot(data=test_data_long,
aes(x=date, y=value, colour=variable)) +
geom_line()
test_data_long
data.frame(a=c(),b=c())
rbind(data.frame(a=c(),b=c()),data.frame(1:5))
rbind(data.frame(a=c(),b=c(3)),data.frame(1:5))
rbind(data.frame(a=c(5),b=c(3)),data.frame(1:5))
rbind(data.frame(),data.frame(1:5))
source('~/.active-rstudio-document')
compare.adapt(func=gaussian1, D=2, L=4, g=3)
source('~/.active-rstudio-document')
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=2)
source('~/.active-rstudio-document')
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=2)
source('~/.active-rstudio-document')
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=2)
source('~/.active-rstudio-document')
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=2)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=8)
source('~/.active-rstudio-document')
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=2)
source('~/.active-rstudio-document')
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=2)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=20)
source('~/.active-rstudio-document')
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=6)
source('~/.active-rstudio-document')
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=3, reps=2)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=30, reps=10)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=50, reps=20)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=30, reps=20)
compare.adapt(func=RFF_get(), D=4, L=6, g=3, batches=3, reps=2)
compare.adapt(func=RFF_get(), D=4, L=8, g=3, batches=3, reps=2)
compare.adapt(func=RFF_get(), D=3, L=8, g=3, batches=3, reps=2)
RFF_get(D=3)
source('~/Git/DOE-code/RFF_test.R')
source('~/Git/DOE-code/RFF_test.R')
tr <- RFF_get(D=3)
tr(matrix(runif(12),4,3))
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
tr(runif(3))
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
source('~/Git/DOE-code/compare_adaptconcept.R')
compare.adapt(func=RFF_get(), D=3, L=8, g=3, batches=3, reps=2)
x
(sin(2*pi* sweep(sweep(x %*% t(dirr),2,offset,'+'), 2,freq,'*')) %*% mag)
dirr
source('~/Git/DOE-code/RFF_test.R')
compare.adapt(func=RFF_get(), D=3, L=8, g=3, batches=3, reps=2)
D
source('~/Git/DOE-code/RFF_test.R')
compare.adapt(func=RFF_get(D=3), D=3, L=8, g=3, batches=3, reps=2)
compare.adapt(func=RFF_get(D=3), D=3, L=8, g=3, batches=15, reps=2)
source('~/Git/DOE-code/compare_adaptconcept.R')
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=2)
source('~/Git/DOE-code/compare_adaptconcept.R')
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=2)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=10)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=10, reps = 10)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=20, reps = 20)
compare.adapt(func=RFF_get(D=4), D=4, L=4, g=3, batches=10, reps = 20)
system.time(compare.adapt(func=RFF_get(D=4), D=4, L=4, g=3, batches=5, reps = 5))
system.time(compare.adapt(func=RFF_get(D=2), D=2, L=4, g=3, batches=5, reps = 5))
system.time(compare.adapt(func=RFF_get(D=2), D=2, L=4, g=3, batches=10, reps = 10))
system.time(compare.adapt(func=RFF_get(D=2), D=2, L=4, g=3, batches=10, reps = 10))
source('~/Git/DOE-code/compare_adaptconcept.R')
source('~/Git/DOE-code/compare_adaptconcept.R')
system.time(compare.adapt(func=RFF_get(D=2), D=2, L=4, g=3, batches=10, reps = 40))
