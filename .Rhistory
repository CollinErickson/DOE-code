SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=1)
SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=10)
source('~/Git/SMED-Code/SMED.R')
SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=10)
source('~/Git/SMED-Code/SMED.R')
SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=10)
source('~/Git/SMED-Code/SMED.R')
SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=10)
source('~/Git/SMED-Code/SMED.R')
SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=10)
source('~/Git/SMED-Code/SMED.R')
SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=10)
source('~/Git/SMED-Code/SMED.R')
SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=10)
Y
ifelse(1:nrow(X) <= n0, Y > Delta, T)
ifelse(1:nrow(X) <= n0, Y > Delta, T)
source('~/Git/SMED-Code/SMED.R')
SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=10)
SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=10)
system.time(SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=10))
source('~/Git/SMED-Code/SMED.R')
system.time(SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=10))
source('~/Git/SMED-Code/SMED.R')
system.time(SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=10))
source('~/Git/SMED-Code/SMED.R')
SMED(gaussian1, 2, X = matrix(runif(10),ncol=2,byrow=T), n=5)
SMED(gaussian1, 2, X0 = matrix(runif(10),ncol=2,byrow=T), n=5)
SMED(gaussian1, 2, X0 = matrix(runif(10),ncol=2,byrow=T), n=1)
SMED(gaussian1, 2, X0 = matrix(runif(10),ncol=2,byrow=T), n=1, Xopt=matrix(c(.5,.1),c(.5,.2),c(.5,.3),c(.5,.4),byrow=T,ncol=2))
SMED(gaussian1, 2, X0 = matrix(runif(10),ncol=2,byrow=T), n=1, Xopt=matrix(c(.5,.1,.5,.2,.5,.3,.5,.4),byrow=T,ncol=2))
source('~/Git/SMED-Code/SMED.R')
SMED(gaussian1, 2, X0 = matrix(runif(10),ncol=2,byrow=T), n=1, Xopt=matrix(c(.5,.1,.5,.2,.5,.3,.5,.4),byrow=T,ncol=2))
SMED(gaussian1, 2, X0 = matrix(runif(10),ncol=2,byrow=T), n=4, Xopt=matrix(c(.5,.1,.5,.2,.5,.3,.5,.4),byrow=T,ncol=2))
source('~/Git/SMED-Code/SMED.R')
SMED(gaussian1, 2, X0 = matrix(runif(10),ncol=2,byrow=T), n=4, Xopt=matrix(c(.5,.1,.5,.2,.5,.3,.5,.4),byrow=T,ncol=2))
SMED(gaussian1, 2, X0 = matrix(runif(10),ncol=2,byrow=T), n=5, Xopt=matrix(c(.5,.1,.5,.2,.5,.3,.5,.4),byrow=T,ncol=2))
source('~/Git/SMED-Code/SMED_select.R')
SMED(gaussian1, 2, X0 = matrix(runif(10),ncol=2,byrow=T), n=5, Xopt=matrix(c(.5,.1,.5,.2,.5,.3,.5,.4),byrow=T,ncol=2))
source('~/Git/SMED-Code/SMED_select.R')
SMED(gaussian1, 2, X0 = matrix(runif(10),ncol=2,byrow=T), n=5, Xopt=matrix(c(.5,.1,.5,.2,.5,.3,.5,.4),byrow=T,ncol=2))
source('~/Git/SMED-Code/SMED_select.R')
SMED(gaussian1, 2, X0 = matrix(runif(10),ncol=2,byrow=T), n=5, Xopt=matrix(c(.5,.1,.5,.2,.5,.3,.5,.4),byrow=T,ncol=2))
Xopt.inds
Xopt.selected
c()
c(c(),4)
best
Xopt.inds
c(Xopt.selected, Xopt.inds[best])
source('~/Git/SMED-Code/SMED_select.R')
SMED(gaussian1, 2, X0 = matrix(runif(10),ncol=2,byrow=T), n=5, Xopt=matrix(c(.5,.1,.5,.2,.5,.3,.5,.4),byrow=T,ncol=2))
source('~/Git/SMED-Code/SMED_select.R')
source('~/Git/SMED-Code/SMED_select.R')
source('~/Git/DOE-code/adaptconcept2_sFFLHD_RC.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.01)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad")
a$run(2)
X
obj_func
SMED_select(f=obj_func,p=ncol(X),n=L, X0=X, Xopt=Xnotrun)
a$run(2)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad")
a$run(2)
Xnotrun
obj_func(runif(2))
obj_func(matrix(runif(2),ncol=2))
source('~/Git/SMED-Code/SMED_select.R')
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad")
a$run(2)
SMED_select(f=obj_func,p=ncol(X),n=L, X0=X, Xopt=Xnotrun)
a$run(2)
obj_func
source('~/Git/DOE-code/adaptconcept2_sFFLHD_RC.R')
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad")
a$run(2)
obj_func(runif(2))
obj_func
obj_func(Xnotrun)
source('~/Git/DOE-code/adaptconcept2_sFFLHD_RC.R')
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad")
a$run(2)
obj_func(runif(2))
obj_func(runif(2))
obj_func(runif(2))
obj_func(runif(2))
Xnotrun
SMED_select(f=obj_func,p=ncol(X),n=L, X0=X, Xopt=Xnotrun)
SMED_select(f=obj_func,p=ncol(X),n=8, X0=X, Xopt=Xnotrun)
points(Xnotrun)
points(Xnotrun)
contourfilled::contourfilled.func(mod$grad_norm)
points(Xnotrun)
points(X, col=2)
text(Xnotrun)
Xnotrun
contourfilled::contourfilled.func(mod$grad_norm)
text(Xnotrun)
SMED_select(f=obj_func,p=ncol(X),n=8, X0=X, Xopt=Xnotrun)
text(Xnotrun[,1],Xnotrun[,2])
contourfilled::contourfilled.func(mod$grad_norm)
text(Xnotrun[,1],Xnotrun[,2])
points(X, col=2, pch=19)
SMED_select(f=obj_func,p=ncol(X),n=9, X0=X, Xopt=Xnotrun)
source('~/Git/DOE-code/adaptconcept2_sFFLHD_RC.R')
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad")
a$run(2)
a$run(2)
a$run(2)
a$run(2)
a$run(2)
a$run(2)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get(), obj="grad")
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(sinumoid)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=sinumoid)
a$run(4, plotlastonly = T)
source('~/Git/DOE-code/adaptconcept2_sFFLHD_RC.R')
a$run(4, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=sinumoid)
a$run(4, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=sinumoid,  obj="grad")
a$run(4, plotlastonly = T)
contourfilled::contourfilled.func(mod$grad_norm)
contourfilled::contourfilled.func(a$mod$grad_norm)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
source('~/Git/SMED-Code/SMED_select.R')
a$run(4, plotlastonly = T)
contourfilled::contourfilled.func(a$mod$grad_norm)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/compare_adaptconcept.R')
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept2_sFFLHD_RC.R')
install.packages("DoE.base")
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept2_sFFLHD_RC.R')
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept2_sFFLHD_RC.R')
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept2_sFFLHD_RC.R')
source('sFFLHD.R')
library("UGP")
source("adaptconcept_helpers.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
source("RFF_test.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.01)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad")
a$run(2)
source("../SMED/SMED-Code/SMED_select.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.01)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad")
a$run(2)
install.packages("numDeriv")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.01)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad")
a$run(2)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad")
a$run(1)
contourfilled::contourfilled.func(a$mod$grad_norm)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
contourfilled::contourfilled.func(a$mod$grad_norm)
a$run(1)
a$run(1)
a$run(10,plotlastonly = T)
l
contourfilled::contourfilled.func(a$mod$grad_norm)
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(sinumoid)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=sinumoid,  obj="grad")
a$run(1)
a$run(1)
a$run(1)
contourfilled::contourfilled.func(a$mod$grad_norm)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
contourfilled::contourfilled.func(a$mod$grad_norm)
a$run(1)
a$run(1)
a$run(10,plotlastonly = T)
a$run(10,plotlastonly = T)
a$run(10,plotlastonly = T)
contourfilled::contourfilled.func(a$mod$grad_norm)
a$run(10,plotlastonly = T)
contourfilled::contourfilled.func(a$mod$grad_norm)
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) }; contourfilled.func(sinumoid)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=sinumoid,  obj="grad")
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/compare_adaptconcept.R')
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/compare_adaptconcept.R')
compare.adapt(func=gaussian1, D=2, L=4, g=3)
source("adaptconcept_sFFLHD_RC.R")
compare.adapt(func=gaussian1, D=2, L=4, g=3)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/compare_adaptconcept.R')
compare.adapt(func=gaussian1, D=2, L=4, g=3)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get(), obj="grad")
a$run(4, plotlastonly = T)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept2_sFFLHD_RC.R')
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get(), obj="grad")
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
compare.adapt(func=gaussian1, D=2, L=4, g=3)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept_sFFLHD_RC.R')
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept2_sFFLHD_RC.R')
compare.adapt(func=gaussian1, D=2, L=4, g=3)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=5, reps = 5)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=5, reps = 10)
compare.adapt(func=RFF_get(), D=2, L=4, g=3, batches=15, reps = 5)
banana <- function(xx){
if(is.matrix(xx)) {
return(apply(xx,1,function(yy){exp(-.005*(yy[1]*40-20)^2-.5*(yy[2]*15-10+.03*(yy[1]*40-20)^2-3)^2)}))
} else {
yy <- xx
exp(-.005*(yy[1]*40-20)^2-.5*(yy[2]*15-10+.03*(yy[1]*40-20)^2-3)^2)
}
}
contourfilled.func(banana)
compare.adapt(func=banana, D=2, L=4, g=3, batches=5, reps = 10)
compare.adapt(func=banana, D=2, L=4, g=3, batches=5, reps = 10)
laGP::garg(list(mle=T, y=c(0,0,0,0)))
laGP::garg(list(mle=TRUE, y=c(0,0,0,0)))
laGP::garg(list(mle=TRUE), y=c(0,0,0,0))
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/compare_adaptconcept.R')
compare.adapt(func=banana, D=2, L=4, g=3, batches=5, reps = 10, n0=8)
compare.adapt(func=banana, D=2, L=4, g=3, batches=15, reps = 5, n0=8)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,func=banana)
a$run(1)
a$run(1)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=2,func=banana)
a$run(1)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=2,func=banana)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=2,func=banana)
a$run(1)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=2,func=banana)
a$run(1)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=4,func=banana)
a$run(1)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept2_sFFLHD_RC.R')
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=4,func=banana)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=4,func=banana)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=4,func=banana)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
contourfilled::contourfilled.func(a$mod$grad_norm)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
contourfilled::contourfilled.func(a$mod$grad_norm)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a <- adapt.concept.sFFLHD.RC(D=2,L=4,n0=4,func=banana, never_dive=T)
a <- adapt.concept.sFFLHD.RC(D=2,L=4,g=3,n0=4,func=banana, never_dive=T)
a$run(1)
a$run(1)
a$run(10,plotlastonly = T)
a$run(10,plotlastonly = T)
a$run(10,plotlastonly = T)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/compare_adaptconcept.R')
source('sFFLHD.R')
library("UGP")
source("adaptconcept_helpers.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
library(laGP)
source("RFF_test.R")
source("adaptconcept_sFFLHD_RC.R")
source("adaptconcept2_sFFLHD_RC.R")
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/TestFunctions.R')
compare.adapt(func=banana, D=2, L=4, no=8, batches=5, reps = 10)
compare.adapt(func=banana, D=2, L=4, g=3, no=8, batches=5, reps = 10)
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=5, reps = 10)
source("../SMED/SMED-Code/SMED_select.R")
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=5, reps = 10)
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=10, reps = 10)
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=11, reps = 10)
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=15, reps = 10)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana)
a$run(1)
a$run(14,plotlastonly = T)
contourfilled::contourfilled.func(a$mod$grad_norm)
a <- adapt.concept.sFFLHD.RC(D=2,L=4,g=3,n0=8,func=banana, never_dive)
a <- adapt.concept.sFFLHD.RC(D=2,L=4,g=3,n0=8,func=banana, never_dive=T)
a$run(15,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana)
a$run(15,plotlastonly = T)
a$stats
a <- adapt.concept.sFFLHD.RC(D=2,L=4,g=3,n0=8,func=banana, never_dive=T)
a$run(15,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana)
a$run(15,plotlastonly = T)
b <- adapt.concept.sFFLHD.RC(D=2,L=4,g=3,n0=8,func=banana, never_dive=T)
b$run(15,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana)
a$run(15,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana)
a$run(15,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana)
a$run(15,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana)
a$run(15,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana)
a$run(15,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana)
a$run(15,plotlastonly = T)
b <- adapt.concept.sFFLHD.RC(D=2,L=4,g=3,n0=8,func=banana, never_dive=T)
b$run(15,plotlastonly = T)
b$stats
a$stats
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana)
a$run(25,plotlastonly = T)
b <- adapt.concept.sFFLHD.RC(D=2,L=4,g=3,n0=8,func=banana, never_dive=T)
b$run(25,plotlastonly = T)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept2_sFFLHD_RC.R')
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana)
a$run(25,plotlastonly = T)
b <- adapt.concept.sFFLHD.RC(D=2,L=4,g=3,n0=8,func=banana, never_dive=T)
b$run(25,plotlastonly = T)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept2_sFFLHD_RC.R')
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana)
a$run(25,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="grad")
a$run(25,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="grad")
a$run(15,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="grad")
a$run(15,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="grad")
a$run(15,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="grad")
a$run(20,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="grad")
a$run(20,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get(), obj="grad")
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(4, plotlastonly = T)
a$run(13, plotlastonly = T)
set.seed(0)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get(), obj="grad")
a$run(25, plotlastonly = T)
set.seed(0)
b <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get(), never_dive=T)
b$run(25, plotlastonly = T)
set.seed(1)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get(), obj="grad")
a$run(25, plotlastonly = T)
set.seed(1)
b <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=RFF_get(), never_dive=T)
b$run(25, plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="func")
a$run(1)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept2_sFFLHD_RC.R')
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="func")
a$run(1)
a$run(24,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="func")
a$run(20,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="grad")
a$run(20,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="func")
a$run(20,plotlastonly = T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="grad")
a$run(20,plotlastonly = T)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/compare_adaptconcept.R')
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=5, reps = 10)
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=15, reps = 10)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept2_sFFLHD_RC.R')
source('sFFLHD.R')
library("UGP")
source("adaptconcept_helpers.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
source("RFF_test.R")
source("/Users/collin/Git/SMED-Code/SMED_select.R")
getwd()
source("../SMED/SMED-Code/SMED_select.R")
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.01)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad")
a$run(2)
a$run(20, plotl=T)
a$run(20, plotl=T)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept2_sFFLHD_RC.R')
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad")
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad", force_old=1)
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad", force_pvar=1)
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad", force_pvar=.1)
a$run(20, plotl=T)
func
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="func")
library("TestFunctions", lib.loc="~/R/win-library/3.3")
require(TestFunctions)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="func")
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="func")
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="func", force_pvar=.2)
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="grad", force_pvar=.2)
a$run(20, plotl=T)
a$run(2, plotl=T)
a$run(2, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="grad", force_pvar=.2)
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="grad", force_pvar=.0)
a$run(20, plotl=T)
a <- adapt.concept.sFFLHD.RC(D=2,L=4,n0=8,func=banana, never_dive=T)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=4,n0=8,func=banana, never_dive=T)
a <- adapt.concept.sFFLHD.RC(D=2,L=4,g=2,n0=8,func=banana, never_dive=T)
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="mse", force_pvar=.0)
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="func", force_pvar=.0)
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="func", force_pvar=.0)
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=banana, obj="grad", force_pvar=.2)
a$run(20, plotl=T)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=sinumoid, obj="grad", force_pvar=.2)
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(sinumoid)
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=sinumoid, obj="grad", force_pvar=.2)
a$run(20, plotl=T)
a$stats
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=sinumoid, obj="func", force_pvar=.2)
a$run(20, plotl=T)
a$stats
a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=sinumoid, obj="mse", force_pvar=.2)
a$run(20, plotl=T)
a <- adapt.concept.sFFLHD.RC(D=2,L=4,g=2,n0=8,func=sinumoid, never_dive=T)
a$run(20, plotl=T)
a <- adapt.concept.sFFLHD.RC(D=2,L=4,g=2,n0=8,func=RFF_get(), never_dive=T)
a$run(20, plotl=T)
set.seed(0);a <- adapt.concept.sFFLHD.RC(D=2,L=4,g=2,n0=8,func=RFF_get(), never_dive=T)
a$run(20, plotl=T)
set.seed(0);a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=sinumoid, obj="mse", force_pvar=.2)
a$run(20, plotl=T)
set.seed(0);a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=RFF_get(), obj="mse", force_pvar=.2)
a$run(20, plotl=T)
set.seed(0);a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=RFF_get(), obj="grad", force_pvar=.2)
a$run(20, plotl=T)
set.seed(0);a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=RFF_get(), obj="grad", force_pvar=.2)
a$run(20, plotl=T)
a$run(5, plotl=T)
contourfilled::contourfilled.func(a$mod$grad_norm)
a$run(5, plotl=T)
set.seed(0);a <- adapt.concept2.sFFLHD.RC(D=2,L=4,n0=8,func=RFF_get(), obj="mse", force_pvar=.2)
a$run(30, plotl=T)
set.seed(0);a <- adapt.concept.sFFLHD.RC(D=2,L=4,g=2,n0=8,func=RFF_get(), never_dive=T)
a$run(30, plotl=T)
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=5, reps = 10)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/compare_adaptconcept.R')
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=5, reps = 10)
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=15, reps = 10)
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=25, reps = 10)
source('C:/Users/cbe117/School/DOE/Codes/DOE-code/compare_adaptconcept.R')
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=5, reps = 10)
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=15, reps = 10)
compare.adapt(func=banana, D=2, L=4, g=3, n0=8, batches=25, reps = 10)
