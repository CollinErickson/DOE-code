adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
adapt.concept2(gaussian,g=3)
adapt.concept2(gaussian,g=3)
X
Z
xlim
ylim
adapt.concept2(gaussian,g=3)
maxmse.ind
mses
maxmse
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
X
Z
print(adapt.tree)
print(adapt.tree$root)
print(adapt.tree$root,'samples')
nd$maxmse
nd$maxmse.name
nd[nd$maxmse.name]
nd$children[[nd$maxmse.name]]
nd$children[[nd$maxmse.name]]$mse
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
nd$maxmse
max(ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND)}))
?apply
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
mod
ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND,mod)})
source('~/Git/DOE-code/adaptconcept.R')
c
adapt.concept2(gaussian,g=3)
ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND,mod)})
nd$maxmse
ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND,mod)})
nd$maxmse
ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND,mod)})
nd$maxmse
ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND,mod)})
nd$maxmse
ancestor.apply(nd,function(ND){msfunc2(mod.se.pred.func,ND,mod)})
nd$maxmse
source('~/Git/DOE-code/adaptconcept.R')
paste(1,2:3)
paste(1,2:3,collapse='')
paste(1,2:3)
cat(1,2:3)
cat(1,2:3) -> ttext
ttext
?cat
paste(1,2:3,collapse=' ')
paste(1,2:3,collapse=' ',sep=' ')
paste(c(1,2:3),collapse=' ')
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(gaussian,g=3)
second.maxmse.child
print(adapt.tree,'mse')
contourfilled.func(function(xx){exp(xx[1])})
contourfilled.func(function(xx){exp(xx[1])*sum(sin(2*pi*xx))})
contourfilled.func(function(xx){exp(xx[1])*sum(sin(2*pi*xx*3))})
contourfilled.func(function(xx){exp(2*xx[1])*sum(sin(2*pi*xx*3))})
contourfilled.func(function(xx){exp(2*xx[1])*sum(sin(2*pi*xx*2))})
contourfilled.func(function(xx){exp(2*xx[1])*sum(sin(2*pi*xx*2))+xx[1]})
contourfilled.func(function(xx){exp(2*xx[1])*sum(sin(2*pi*xx*2))+xx[1]*4})
contourfilled.func(function(xx){exp(2*xx[1])*sum(sin(2*pi*xx*2))+xx[1]*40})
contourfilled.func(function(xx){exp(2*sqrt(xx[1]))*sum(sin(2*pi*xx*2))+xx[1]*40})
contourfilled.func(function(xx){exp(2*xx[1])*sum(sin(2*pi*xx*2))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*2))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 1/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){1/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 10/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 30/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 100/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 500/(1+exp(-xx[[1]]))})
contourfilled.func(function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-xx[[1]]))})
rastimoid <- function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-xx[[1]]))}; contourfilled.func(rastimoid)
adapt.concept2(rastimoid)
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(rastimoid)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(rastimoid)
banana <- function(xx){exp(-.5*(xx[1]*80-40)^2/100-.5*((xx[2]*30-20)+.03*(xx[1]*80-40)^2-3)^2)}
contourfilled.func(banana)
adapt.concept2(banana)
install.packages('dagR')
library('dagR')
dag.draw(demo.dag1())
demo.dag1()
demo.dag0
dag.draw(demo.dag0())
dag.init(arcs=c(1,2))
dag.draw(dag.init(arcs=c(1,2)))
dag.draw(dag.init(arcs=c(1,2,2,3)))
dag.draw(dag.init(arcs=c(1,2,2,3)))
dag.draw(dag.init(arcs=c(1,2,2,3,4,3)))
dag.draw(dag.init(covs=1,arcs=c(1,2,2,3,4,3)))
dag.draw(dag.init(covs=rep(1,3),arcs=c(1,2,2,3,4,3)))
dag.draw(dag.init(covs=rep(1,4),arcs=c(1,2,2,3,4,3)))
dag.draw(dag.init(covs=rep(1,4),arcs=c(1,2)))
library('data.tree')
library('data.tree')
acme <- Node$new('acme inc')
acme$AddChild('bb')
acme$AddChild('ccc')
acme$AddChild('dddd')
e <- acme$AddChild('e')
e$AddChild('ea')
acme$AddChild(49)
e$AddChild(paste(3,2,4))
plot(acme)
bo <- e$AddChild('bo')
plot(acme)
acme$AddChildNode(bo)
plot(acme)
bo$parent
bo
acme$children
plot(acme)
print(ace)
print(acme)
bo$siblings
install.packages('gRbase')
library('gRbase')
source("https://bioconductor.org/biocLite.R")
biocLite("RBGL")
library('gRbase')
ug( ~a*b + b*c*d)
ug11 <- ug( ~a*b + b*c*d)
ug11
print(ug11)
plot(ug11)
nodes(ug11)
library('graph')
sapply
library('igraph')
library('Rgraphviz')
plot(ug11)
plot(ug11)
source("https://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
plot(ug11)
nodes(ug11)
edges(ug11)
ug11 <- dag( ~a*b + b*c*d)
plot(ug11)
plot(ug11)
plot(dag(c(1,2)))
plot(dag(c(1,2)))
plot(dag(c(1,2,4,5)))
plot(dag(c(1,2,4,5)))
plot(dag(c(1,2,4,5),c(3,4)))
plot(dag(c(1,2,4,5),c(3,4)))
plot(dag(c(1,2,4,5),c(3,4),c(2,3)))
methods(ug11)
ug11
str(ug11)
ug11$nodes
edgeData(ug11)
plot(dag(list(c(1,2,4,5),c(3,4),c(2,3))))
plot(dag(list(c(1,2,4,5),c(3,4),c(2,3))))
acme$AddChildNode()
acme$AddChildNode
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept3(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept3(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept3(gaussian,g=3)
adapt.concept3(gaussian,g=3)
gaussian
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept3(gaussian,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept3(gaussian,g=3)
adapt.concept3(gaussian1,g=3)
func
adapt.concept3(gaussian1,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept3(gaussian1,g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept3(gaussian1,g=3)
msess
mses
rowMeans(mses)
applyMeans(mses)
colMeans(mses)
sapply(1:2,function(d){apply(d,mean)})
sapply(1:2,function(d){apply(mses,d,mean)})
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept3(gaussian1,g=3)
mses
mses.grid
maxmse
maxmse.ind
xlim.next
ylim.next
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept3(gaussian1,g=3)
mses.grid
mses
xlim.next
ylim.next
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept3(gaussian1,g=3)
mses
xlim
ylim.next
xlim.next
adapt.concept3(rastimoid,g=3)
rastimoid <- function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-xx[[1]]))}; contourfilled.func(rastimoid)
adapt.concept3(rastimoid,g=3)
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/sFFLHD.R')
A1
Vb
summary(Vb)
Xb
Lb
Mb
FF1.1
summary(FF1.1)
summary(Mb)
a
anyDuplicated
source('~/Git/DOE-code/sFFLHD.R')
any(duplicated(matrix(unlist(lapply(1:length(FF),function(ii)t(FF[[ii]]))),ncol=3,byrow=T)))
anyDuplicated(matrix(unlist(lapply(1:length(FF),function(ii)t(FF[[ii]]))),ncol=3,byrow=T)))
anyDuplicated(matrix(unlist(lapply(1:length(FF),function(ii)t(FF[[ii]]))),ncol=3,byrow=T))
FF[[1]]
summary(FF[[1]])
summary(FF.projected[[1]])
table(FF[[1]][,1])
table(FF.projected[[1]][,1])
lapply(1:length(FF),function(ii){lapply(1:((Lb/a/L)^D),function(jj){FF[[ii]][():(),]})})
lapply(1:length(FF),function(ii){lapply(1:((Lb/a/L)^D),function(jj){FF[[ii]][((jj-1)*+1):(),]})})
nperH <- nrow(FF[[1]])/(L^(D-2))
nperH
lapply(1:length(FF),function(ii){lapply(1:((Lb/a/L)^D),function(jj){FF[[ii]][((jj-1)*nperH+1):(jj*nperH),]})})
source('~/Git/DOE-code/sFFLHD.R')
Hk <- lapply(1:length(FF),function(ii){lapply(1:(L^(D-2)),function(jj){FF.projected[[ii]][((jj-1)*nperH+1):(jj*nperH),]})})
Hk
Hk[[8]][[2]]
Hk[[8]][[2]][order(Hk[[8]][[2]][,1]),]
source('~/Git/DOE-code/sFFLHD.R')
Hk[[1]][[3]]
L
source('~/Git/DOE-code/sFFLHD.R')
FF[[1]]
L
Fslice[[1]][[2]]
Fslices[[1]][[2]]
duplicated(c(1,3,5,3))
anyDuplicated(c(1,3,5,3))
anyDuplicated(c(1,3,5,3,3,6,5))
?anyDuplicated
source('~/Git/DOE-code/sFFLHD.R')
summary(Mb)
summary(Vb)
Vb
Vb
summary(Vb)
source('~/Git/DOE-code/sFFLHD.R')
Vb
summary(Vb)
i
j
source('~/Git/DOE-code/sFFLHD.R')
print(Q)
G[i,j]
Vb
lb
Lb
A
source('~/Git/DOE-code/sFFLHD.R')
print(Q)
G[i,j]
Vb
Vb
Vb
apply(Vb,2,anyDuplicated)
Vb
e
print(Q)
i
j
Vb
lb
Lb
G
L
source('~/Git/DOE-code/sFFLHD.R')
Lb
FF[[1]]
Fsliced[[1]][[1]]
Fslices[[1]][[1]]
FF[[1]]
lapply(1:length(FF),function(ii){lapply(1:(L^(D-2)),function(jj){FF[[ii]][((jj-1)*nperH+1):(jj*nperH),]})})
source('~/Git/DOE-code/sFFLHD.R')
G
Vb
Vb
Vb
c(i,j)
print(Q)
G[i,j]
G
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
stripchart(Vb[,j])
setdiff(1:128,Vb[,j])
source('~/Git/DOE-code/sFFLHD.R')
Vb
setdiff(1:128,Vb[,j])
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
source('~/Git/DOE-code/sFFLHD.R')
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
setdiff(1:128,Vb[,j])
source('~/Git/DOE-code/sFFLHD.R')
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
setdiff(1:128,Vb[,j])
source('~/Git/DOE-code/sFFLHD.R')
setdiff(1:128,Vb[,j])
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
source('~/Git/DOE-code/sFFLHD.R')
setdiff(1:128,Vb[,j])
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
G
summary(G)
source('~/Git/DOE-code/sFFLHD.R')
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
setdiff(1:128,Vb[,j])
source('~/Git/DOE-code/sFFLHD.R')
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
setdiff(1:128,Vb[,j])
G
source('~/Git/DOE-code/sFFLHD.R')
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
setdiff(1:128,Vb[,j])
source('~/Git/DOE-code/sFFLHD.R')
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
setdiff(1:128,Vb[,j])
source('~/Git/DOE-code/sFFLHD.R')
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
setdiff(1:128,Vb[,j])
source('~/Git/DOE-code/sFFLHD.R')
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
setdiff(1:128,Vb[,j])
Vb
r
which(Vb[,j] %in% (lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1))
which(Vb[,j] %in% ((lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)))
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1-1)/Lb-1+1)
Fslices[[1]]
p
G
r
Fslices[[1]]
L
G
ceiling(G/2)
floor(FF[[1]]/2)
Lb
Fslices
L^(D-2)*(Lb/a/L)^D
a^D
L
L^(D-2)*(Lb/a/L)^D
Lb
G
L
Hk
L^(D-2)*(Lb/a/L)^D
a^D
FF
Lb
L^(D-2)
Hk
L^(D-2)*(Lb/a/L)^D
Fslices
FF.projected
L^(D-2)*(Lb/a/L)^D
FF.projected[[1]]
nb
L
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/sFFLHD.R')
Fslices
0
Fslices[[1]][[1]]
Fslices
Fslices
lapply(Fslices,function(ff){lapply(1:L,function(ii){ff[():(ii*),]})})
source('~/.active-rstudio-document')
Fslices[[4]]
split.matrix(Fslices[[4]],2)
source('~/.active-rstudio-document')
split.matrix(Fslices[[4]],2)
source('~/.active-rstudio-document')
split.matrix(Fslices[[4]],2)
split.matrix(Fslices[[4]],nsp=2)
split.matrix(Fslices[[4]],nsplits=2)
source('~/.active-rstudio-document')
split.matrix(Fslices[[4]],nsplits=2)
Fslices[[4]]
split.matrix(Fslices[[4]],L)
Fslices
lapply(Fslices,function(mmat){split.matrix(mmat,L)})
source('~/Git/DOE-code/sFFLHD.R')
Fslices
Vb
Vb
summary(Vb)
apply(Vb,2,function(a)sort(a)==1:128)
apply(Vb,2,function(a)any(sort(a)!=1:128))
apply(Vb,2,sort)
apply(Vb,2,anyDuplicated)
Mb
nrow(Mb)
Lb^D
source('~/Git/DOE-code/sFFLHD.R')
Fslices
Mb
Fslices[[2]]
FF[[2]]
split.matrix(FF[[1]],nsplits = L^(D-2)*(Lb/a/L)^D)
source('~/Git/DOE-code/sFFLHD.R')
Vb
vii
v
FFv
FF1.1
FFv
Fslices1
Fslices
Vb
lb
a
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/sFFLHD.R')
vii
v
Mb
FF1.1
Mb
source('~/Git/DOE-code/sFFLHD.R')
vii
FF1.1
v
Fslices
source('~/Git/DOE-code/sFFLHD.R')
vii
FFv
Vb
Fslices
Vb
Vb
Vb
Vb
Vb
summary(Vb)
Vb
vii
Mb.store
Vb
Mb
Lb^D
Lb
Lb
b
source('~/Git/DOE-code/sFFLHD.R')
Vb
summary(Vb)
apply(Vb,2,anyDuplicated)
Mb
Mb
Lb
Mb
anyDuplicated(Mb)
summary(Mb)
Mb
dim(Mb)
source('~/Git/DOE-code/sFFLHD.R')
Vb
pairs(Vb)
pairs(Vb)
pairs(Mb)
Wb
pairs(Wb)
pairs(Xb)
Mb
