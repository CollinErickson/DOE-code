Wb
Xb
Vb
Vb
Xb
source('~/Git/DOE-code/sFFLHD.R')
j
i
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/sFFLHD.R')
i
j
Vb
Vb
e
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/sFFLHD.R')
i
j
source('~/Git/DOE-code/sFFLHD.R')
i
j
Vb
n1
n2
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/sFFLHD.R')
Vb
source('~/Git/DOE-code/sFFLHD.R')
r
p
Vb
lb
nb
L
lb
Xb
lb
Vb
nb
Vb
i
j
print(Q)
Vb[,j]
e
Vb
n1
nb
Xb
Vb
print(Q)
i
j
G
e
Vb
Vb
Vb
Vb
print(Q)
e
Vb
Vb
j
i
Vb
n1+i-1
source('~/Git/DOE-code/sFFLHD.R')
Vb
Vb
epl
eps
source('~/Git/DOE-code/sFFLHD.R')
Vb
Vb
G
eps
Xb
Wb
Mb
Vb
print(Q)
G
source('~/Git/DOE-code/sFFLHD.R')
Vb
G
source('~/Git/DOE-code/sFFLHD.R')
Vb
G
A
OA
OA2
A1
AA[[1]]
A[[1]]
source('~/Git/DOE-code/sFFLHD.R')
Bv
Vb
Vb
Vb
G
setdiff((lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1)/Lb),Vb[,j])
setdiff((lb*(G[3,2]-1)/Lb+1):(lb*(G[3,2]+1)/Lb),Vb[,2])
source('~/Git/DOE-code/sFFLHD.R')
print(Q)
Vb
(lb*(G[i,j]+1)/Lb)
(lb*(G[i,j]-1)/Lb+1):(lb*(G[i,j]+1)/Lb)
Vb[,j]
G
lb
Lb
Vb
Xb
Mb
Wb
source('~/Git/DOE-code/sFFLHD.R')
Vb
Xb
Vb
source('~/Git/DOE-code/sFFLHD.R')
Vb
G
Xb
source('~/Git/DOE-code/sFFLHD.R')
Xb
Vb
G
G==Vb
Vb
print(Q)
G
Vb
Xb
pairs(Xb,pch=19)
Vb
Vb
pairs(Vb,pch=19)
pairs(Vb,pch=19)
pairs(Xb,pch=19)
Vb
Vb
pairs(Vb,pch=19)
sort(Vb[,1])
sort(Vb[,2])
sort(Vb[,3])
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/sFFLHD.R')
Vb
summary(Vb)
Lb
Mb
sort(Mb)
table(MB)
table(Mb)
table(Mb[,1:2])
table(Mb[,1],Mb[,2])
table(Mb[,1],Mb[,3])
table(Mb[,2],Mb[,3])
duplicated(Mb)
duplicated(rbind(Mb,c(1,1,1,1)))
duplicated(rbind(Mb,c(1,1,1)))
Mb
Xb
Lb
source('~/Git/DOE-code/sFFLHD.R')
lb
lb
Vb
Vb
Xb
Xb
Vb
lb
source('~/Git/DOE-code/sFFLHD.R')
Vb
e
print(Q)
G
lb
Lb
G
source('~/Git/DOE-code/sFFLHD.R')
Vb
Vb
summary(Vb)
apply(Vb,2,function(xx)any(duplicated(xx)))
apply(Vb,2,function(xx){xx==1:64})
apply(Vb,2,function(xx){any(sort(xx)!=1:64)})
source('~/Git/DOE-code/sFFLHD.R')
Lb
Mb
duplicate(Mb)
duplicated(Mb)
any(duplicated(Mb))
Lb
Mb
source('~/Git/DOE-code/sFFLHD.R')
Mb
source('~/Git/DOE-code/sFFLHD.R')
Vb
G
source('~/Git/DOE-code/sFFLHD.R')
print(Q)
G
source('~/Git/DOE-code/sFFLHD.R')
Vb
print(Q)
source('~/Git/DOE-code/sFFLHD.R')
Vb
print(Q)
G
lb
Lb
(lb*(G[i,j]-1+1)/Lb+1):(lb*(G[i,j]+1)/Lb-1)
source('~/Git/DOE-code/sFFLHD.R')
Vb
summary(Vb)
duplicate(Mb)
duplicated(Mb)
summary(Lb)
Lb
summary(Mb)
Lb
summary(Mb)
source('~/Git/DOE-code/sFFLHD.R')
Mb
Xb
V9
Vb
summary(Vb)
Mb
source('~/Git/DOE-code/sFFLHD.R')
Mb
V
Vb
summary(Vb)
summary(Xb)
Mb
summary(Mb)
summary(floor(Xb*Lb))
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/sFFLHD.R')
Mb
any(duplicated(Mb))
Xb
FF
unlist(FF)
unlist(lapply(1:8,function(ii)t(FF[[i]]))
)
FF
unlist(lapply(1:8,function(ii)t(FF[[i]]))
)
unlist(lapply(1:8,function(ii)(FF[[i]]))
)
FF
unlist(FF)
unlist(lapply(1:8,function(ii)t(FF[[i]])))
FF
t(F[[8]])
t(FF[[8]])
unlist(lapply(1:8,function(ii)t(FF[[i]])))
length(FF)
unlist(lapply(1:8,function(ii)(FF[[i]]))
)
lapply(1:8,function(ii)(FF[[i]])
)
FF
lapply(1:8,function(ii)(FF[[ii]])
)
FF
unlist(lapply(1:8,function(ii)t(FF[[ii]])))
matrix(unlist(lapply(1:8,function(ii)t(FF[[ii]]))),ncol=3,byrow=T)
any(duplicated(matrix(unlist(lapply(1:8,function(ii)t(FF[[ii]]))),ncol=3,byrow=T)))
(duplicated(matrix(unlist(lapply(1:8,function(ii)t(FF[[ii]]))),ncol=3,byrow=T)))
any(duplicated(matrix(unlist(lapply(1:8,function(ii)t(FF[[ii]]))),ncol=3,byrow=T)))
(summary(matrix(unlist(lapply(1:8,function(ii)t(FF[[ii]]))),ncol=3,byrow=T)))
source('~/Git/DOE-code/sFFLHD.R')
length(FF)
L
L^(D-2)*(Lb/a/L)^D
FF[[1]]
L
(Lb/a/L)^D
L^(D-2)*(Lb/a/L)^D
(Lb/a/L)^D
L^(D-2)
length(FF)
a^D
Lb
L
(Lb/a*L)^D
(Lb/a/L)^D
L^(D-2)
source('~/Git/DOE-code/sFFLHD.R')
FF[[1]]
L
FF[[1]]*L/Lb
L
Lb
summary(FF[[1]]*L/Lb)
summary(floor(FF[[1]]*L/Lb))
table(floor(FF[[1]]*L/Lb))
help(split)
FF
source('~/Git/DOE-code/sFFLHD.R')
FF
unsplit(FF)
unsplit(FF,1:8)
.
.()
FF[[1]]
lapply(1:32,function(ii){FF[[8]][(ii-1)*32+1,ii*2,]})
lapply(1:32,function(ii){FF[[8]][((ii-1)*2+1):(ii*2),]})
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=2)
gaussian <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
contourfilled.func(gaussian)
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
contourfilled.func(banana)
banana <- function(xx){exp(-.5*(xx[1]*80-40)^2/100-.5*((xx[2]*30-20)+.03*(xx[1]*80-40)^2-3)^2)}
banana <- function(xx){exp(-.5*(xx[1]*80-40)^2/100-.5*((xx[2]*30-20)+.03*(xx[1]*80-40)^2-3)^2)}
contourfilled.func(banana)
adapt.concept2(banana)
cc
s4
tl <- list(a=12)
tl
tl[[1]]
tl[[2]]
names(tl)
library(data.tree)
library('data.tree')
install.packages("data.tree")
library('data.tree')
acme <- Node$new('acme inc')
acme
acme$AddChild('bb')
acme
acme$AddChildNode('ccc')
acme$AddChild('ccc')
acme
acme$AddChild('dddd')
acme
acme$Get()
acme$children
e <- acme$AddChild('e')
acme
e$AddChild('ea')
acme
e
acme
acme$children
acme$AddChild(49)
acme
acme$children
names(acme$children)
e$AddChild(c(3,2,4))
e$AddChild(paste(3,2,4))
e
acme
names(e$clone())
names(e$children
)
e$root
e$path
e$parent
e$mat <- matrix(1:6,2,3)
e
acme
e
e$mat
print(acme,mat)
print(acme,'mat')
acme$children
acme$children$e
acme$children$e$49
acme$children$e$`49`
acme$children$e$`49`$parent
acme$children$e$parent
acme$children$e['49']
acme$children$e[['49']]
e$mat
e$Get('mat')
e
e$isLeaf
e$isRoot
acme$children$e[49]
acme$children$e
acme$children$`49`
acme$children
class(acme$children$`49`)
class(e)
acme$children[49]
acme$children['49']
names(acme$children)
e$AddChild(c(1,2))
e
e$AddChild(paste(c(1,2)))
e
matrix(list(),3,2)
matrix(list(a=12),3,2)
matrix(list(a=12,b=44),3,2)
tree
node
Node
print(acme)
print(acme,limit=3)
print(acme,limit=5)
e$fields
e$fieldsAll
acme$fields
acme$fieldsAll
acme$RemoveAttribute()
acme$mat
outer(1:5,1:5,function(a,b){acme$AddChild(paste(a,b))})
acme
acme$AddChild(paste(43,45))
acme
outer(1:5,1:5,function(a,b){acme$AddChild(paste(a,b));T})
outer(1:5,1:5,function(a,b){T})
outer(1:5,1:5,function(a,b){a+b})
outer(1:5,1:5,Vectorize(function(a,b){acme$AddChild(paste(a,b));T}))
acme
acme$mat
acme$mat+1
NULL+1
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
acme$`1 1`
acme[paste(1,1)]
`tl`
`1`
acme$children
acme$children[paste(1,1)]
paste(c(1,2))
paste(c(1,2),collapse = '')
paste(c(1,2),collapse = ' ')
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
is.null(adapt.tree)
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree$level
level
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
print(adapt.tree)
print(adapt.tree,'lev')
level
adapt.tree
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
adapt.tree
adapt.tree$samples
adapt.tree
adapt.tree$children
adapt.tree$children(paste(maxmse.ind,collapse = ' '))
adapt.tree$children[paste(maxmse.ind,collapse = ' ')]
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree = adapt.tree$children[paste(maxmse.ind,collapse = ' ')]
adapt.tree
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
adapt.tree
adapt.tree$lev
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
adapt.tree$Ad
class(adapt.tree\)
class(adapt.tree)
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
class(adapt.tree)
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree$children[paste(maxmse.ind,collapse = ' ')]
class(adapt.tree$children[paste(maxmse.ind,collapse = ' ')])
adapt.tree$children[paste(maxmse.ind,collapse = ' ')][[1]]
class(adapt.tree$children[paste(maxmse.ind,collapse = ' ')][[1]])
adapt.tree$children[[paste(maxmse.ind,collapse = ' ')]]
class(adapt.tree$children[[paste(maxmse.ind,collapse = ' ')]])
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
adapt.concept2(function(xx) exp(-sum((xx-.5)^2)/2/.1),g=3)
adapt.tree
adapt.tree$parent
print(adapt.tree$parent,'samples')
print(adapt.tree$parent,'samples')
print(adapt.tree$root,'samples')
print(adapt.tree$root,'samples')
Aggregate(adapt.tree$root,'samples',sum)
