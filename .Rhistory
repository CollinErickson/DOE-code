¥†
n <- 9
k <- 3
s <- 3
N <- 27
split(Zn,Zn)
Zn <- 1:N
split(Zn,Zn)
split(Zn,ceiling(Zn/k))
g <- split(Zn,ceiling(Zn/k))
g[[1]]
g[['1']]
rm(g[[1]])
rm('g[[1]]')
g
g[[1]] <- NULL
g
g[[1]]
g[[2]]
g[[as.character(2)]]
g <- split(Zn,ceiling(Zn/k))
lapply(1:t,function(i){matrix(g[[as.character(i)]])})
t <- 3
t <- n/s
t <- n/s
Zn <- 1:N
g <- split(Zn,ceiling(Zn/k))
G <- lapply(1:s,function(u){matrix(NA,t,k)})
G
g
matrix(g)
unlist(G)
unlist(g)
lapply(1:s,function(u){sapply(1:t,function(i){g[[i+t*(u-1)]]})})
lapply(1:s,function(u){lapply(1:t,function(i){g[[i+t*(u-1)]]})})
sample(1:9)
lapply(1:s,function(u){lapply(1:t,function(i){sample(g[[i+t*(u-1)]])})})
lapply(1:s,function(u){sapply(1:t,function(i){sample(g[[i+t*(u-1)]])})})
lapply(1:s,function(u){t(sapply(1:t,function(i){sample(g[[i+t*(u-1)]])}))})
G
lapply(1:s,function(u){sapply(1:t,function(i){sample(g[[i+t*(u-1)]])})})
G[[1]] <- tm
G[[1]] -> tm
tm
G[[1]]
lapply(1:s,function(u){sapply(1:t,function(i){sample(g[[i+t*(u-1)]])})})
lapply(1:s,function(u){sapply(1:t,function(i){sample(g[[i+t*(u-1)]])})}) -> tm
tm
lapply(1:s,function(u){sapply(1:t,function(i){sample(g[[i+t*(u-1)]])})})[[1]] -> tm
tm
apply(tm,2,sample)
apply(tm,2,sample)
apply(tm,2,sample)
lapply(1:s,function(u){apply(t(sapply(1:t,function(i){sample(g[[i+t*(u-1)]])})),2,sample)})
G <- lapply(1:s,function(u){apply(t(sapply(1:t,function(i){sample(g[[i+t*(u-1)]])})),2,sample)})
G
unlist(G)
sapply(1:s,t)
sapply(1:s,function(u)t(u))
sapply(1:s,function(u)t(G[[u]]))
lapply(1:s,function(u)t(G[[u]]))
G
lapply(1:s,function(u)t(G[[u]]))
unlist(lapply(1:s,function(u)t(G[[u]])))
unlist(lapply(sample(1:s),function(u)t(G[[u]])))
unlist(lapply(sample(1:s),function(u)t(G[[u]])))
unlist(lapply(sample(1:s),function(u)t(G[[u]])))
unlist(lapply(sample(1:s),function(u)t(G[[u]]))),,byrow=)
matrix(unlist(lapply(sample(1:s),function(u)t(G[[u]]))),3,byrow=T)
matrix(unlist(lapply(sample(1:s),function(u)t(G[[u]]))),ncol=3,byrow=T)
matrix(unlist(lapply(sample(1:s),function(u)t(G[[u]]))),ncol=3,byrow=T)
n <- 9
k <- 3
s <- 3
N <- 27
t <- n/s
Zn <- 1:N
g <- split(Zn,ceiling(Zn/k))
#G <- lapply(1:s,function(u){matrix(NA,t,k)})
#lapply(1:t,function(i){matrix(g[[as.character(i)]])})
G0 <- lapply(1:s,function(u){apply(t(sapply(1:t,function(i){sample(g[[i+t*(u-1)]])})),2,sample)})
G <- matrix(unlist(lapply(sample(1:s),function(u)t(G0[[u]]))),ncol=3,byrow=T)
G
pairs(G)
cor(G)
source('~/Git/DOE-code/SPM.R')
SPM(n=9,k=3,s=3)
OA0 <- matrix(c(0,0,0,0,0,1,1,2,0,2,2,1,1,0,1,1,1,1,2,0,1,2,0,2
,2,0,2,2,2,1,0,1,2,2,1,0),nrow=4)
OA
OA0
rowSums(OA0)
n <- 9
n <- 9
s <- 3
d <- 4
r <- 2
OA0 <- t(matrix(c(0,0,0,0,0,1,1,2,0,2,2,1,1,0,1,1,1,1,2,0,1,2,0,2
OA0 <- t(matrix(c(0,0,0,0,0,1,1,2,0,2,2,1,1,0,1,1,1,1,2,0,1,2,0,2
OA0 <- t(matrix(c(0,0,0,0,0,1,1,2,0,2,2,1,1,0,1,1,1,1,2,0,1,2,0,2
,2,0,2,2,2,1,0,1,2,2,1,0),nrow=4))
OA <- lapply(1:k,function(i){OA0[sample(1:nrow(OA0)),sample(1:ncol(OA0))]})
OA
replace(OA[[1]],0:2,0:2)
replace(1:3,1:3,1:3)
replace(1:3,1:3,3:1)
replace(1:2,1:3,3:1)
OA[[1]]
as.factor(OA[[1]])
replace(OA[[1]],0:2,0:2)
replace((OA[[1]]),0:2,0:2)
replace(OA[[1]],0:2,2:0)
0:2
2:0
replace(c(OA[[1]]),0:2,0:2)
c(OA[[1]])
replace(c(OA[[1]]),0,4)
replace(c(OA[[1]]),c(0,1),c(5,6))
replace(c(0,3,1,2),c(0,1),c(5,6))
OA <- lapply(1:k,function(i){OA0[sample(1:nrow(OA0)),sample(1:ncol(OA0))]})
OA <- lapply(1:k,function(i){OA0[sample(1:nrow(OA0)),sample(1:ncol(OA0))]})
# randomize symbols
random.symbols <- Vectorize(function(val,switchlist){switchlist[[as.character(val)]]})
OA
random.symbols(OA[[1]],list(0=0,1=1,2=2))
random.symbols(OA[[1]],list('0'=0,'1'=1,'2'=2))
random.symbols <- Vectorize(function(val,replace,values){values[which(val==replace)]})
randomize.symbols <- Vectorize(function(val,replace,values){values[which(val==replace)]})
randomize.symbols(OA[[1]],0:2,3:5)
mp1 <- Vectorize(function(aa){aa+1})
mp1(9)
mp1(matrix(9,2,2))
mp1 <- (function(aa){aa+1})
mp1(matrix(9,2,2))
randomize.symbols <- (function(val,replace,values){values[which(val==replace)]})
randomize.symbols(OA[[1]],0:2,3:5)
apply(matrix(1:4,2,2),1:2,function(a){a+1})
apply(matrix(1:4,2,2),1:2,function(a){a})
randomize.symbols <- (function(val,replace,values){values[which(val==replace)]})
apply(OA[[1]],1:2,randomize.symbols)
apply(OA[[1]],1:2,randomize.symbols,0:2,3:5)
apply(OA[[1]],1:2,randomize.symbols,0:2,3:5)
lapply(1:k,function(i){apply(OA[[i]],1:2,randomize.symbols,0:2,3:5)})
lapply(1:k,function(i){apply(OA[[i]],1:2,randomize.symbols,0:2,sample(0:2))})
OA
M <- sapply(1:d,function(i){SPM(n,k,s)})
M
M <- lapply(1:d,function(i){SPM(n,k,s)})
M
OA
M[[1]]
M[[1]]-runif(27)
M
g
source('~/Git/DOE-code/LHS.R')
simple.grid(3,2)
m
names(m)
source('~/Git/DOE-code/LHS.R')
simple.grid(3,2)
m
m
plot(m)
abline(h=c(1/3,2/3))
abline(v=c(1/3,2/3))
simple.grid(3,2,centered=T)
m
plot(m)
simple.grid(3,2,centered=T,scaled=F)
plot(m)
source('~/Git/DOE-code/LHS.R')
plot(simple.grid(3,2))
plot(simple.grid(3,2))
plot(simple.grid(3,2))
plot(simple.grid(3,2))
source('~/Git/DOE-code/LHS.R')
plot(simple.grid(3,2))
m
colnames(j)
m[,'j']
rownames(j)
cbind(m,j)
j
cbind(m,j,setnames())
cbind(m,j,setnames(j))
cbind(m,j,setNames(j))
cbind(m,j,setNames(j,NULL))
source('~/Git/DOE-code/LHS.R')
plot(simple.grid(3,2))
m
plot(m)
plot(simple.grid(3,3))
m
source('~/Git/DOE-code/LHS.R')
plot(simple.grid(3,3))
pairs(simple.grid(3,3))
source('~/Git/DOE-code/LHS.R')
pairs(simple.grid(3,3))
pairs(simple.grid(5,3))
source('~/Git/DOE-code/LHS.R')
pairs(simple.grid(5,3))
pairs(m)
dim(m)
n^d
source('~/Git/DOE-code/LHS.R')
pairs(simple.grid(5,3))
g <- 3
g <- 3
orig.design <- simple.grid(g,2)
source('~/Git/DOE-code/LHS.R')
g <- 3
g <- 3
g <- 3
orig.design <- simple.grid(g,2)
plot(orig.design)
rand
random
source('~/Git/DOE-code/LHS.R')
orig.design <- simple.grid(g,2)
plot(orig.design)
orig.design <- simple.grid(g,2,random=F)
plot(orig.design)
plot(orig.design,xlim=c(0,1),ylim=c(0,1))
source('~/Git/DOE-code/LHS.R')
orig.design <- simple.grid(g,2,random=F)
plot(orig.design,xlim=c(0,1),ylim=c(0,1))
func <- function(xx) exp(-sum((xx-.5)^2))
orig.design
apply(orig.design,1,func)
func <- function(xx) exp(-sum((xx-.5)^2)/2)
func <- function(xx) exp(-sum((xx-.5)^2)/2)
apply(orig.design,1,func)
func <- function(xx) exp(-sum((xx-.5)^2)/2/.3)
apply(orig.design,1,func)
func <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
apply(orig.design,1,func)
require(mlegp)
install.packages("mlegp")
require(mlegp)
Z <- apply(orig.design,1,func)
Z <- apply(orig.design,1,func)
require(mlegp)
X <- orig.design
mlegp(X,Z)
mod <- mlegp(X,Z)
mod
require(contourfilled)
contourfilled.func(function(XX){predict.gp(mod,XX)})
predict.gp
mlegp::predict.gp()
g <- 3
orig.design <- simple.grid(g,2,random=F)
plot(orig.design,xlim=c(0,1),ylim=c(0,1))
func <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
Z <- apply(orig.design,1,func)
require(mlegp)
require(contourfilled)
X <- orig.design
mod <- mlegp(X,Z)
contourfilled.func(function(XX){predict.gp(mod,XX)})
source('~/Git/DOE-code/LHS.R')
orig.design <- simple.grid(g,2,random=F)
plot(orig.design,xlim=c(0,1),ylim=c(0,1))
func <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
Z <- apply(orig.design,1,func)
require(mlegp)
require(contourfilled)
X <- orig.design
mod <- mlegp(X,Z)
contourfilled.func(function(XX){predict.gp(mod,XX)})
contourfilled.func(function(XX){predict.gp(mod,XX,se.fit = T)$se})
msfunc <- function(func1,xlim,ylim) {
X1 <- simple.grid(10,2)
mean(apply(X1,1,func2)^2)
}
mod.se.pred.func <- function(XX){predict.gp(mod,XX,se.fit = T)$se}
msfunc(mod.se.pred.func,0:1,0:1)
msfunc <- function(func1,xlim,ylim) {
X1 <- simple.grid(10,2)
mean(apply(X1,1,func1)^2)
}
msfunc(mod.se.pred.func,0:1,0:1)
outer(1:g,1:g,function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g)})
outer(1:g,1:g,function(a,b){a+b})
tfms <- function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g)}
tfms(1,1)
tfms(3,3)
tfms(2,2)
tfms(2,1)
tf(1,1)
tfms(1,1)
tfms(1,2)
tfms(3,3)
tfms(2,2)
outer(1:g,1:g,function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g)})
outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g)}))
outer(1:g,1:5,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g)}))
outer(1:g,1:9,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g)}))
outer(1:g,1:9,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g)}))
outer(1:g,1:9,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g)}))
X
X*c(1/3,3)
X*matrix(c(1/3,3),nrow=1
)
X
X*matrix(c(1/3,3),nrow=9,ncol=2,byrow=T)
X*matrix(c(1/3,3),nrow=9,ncol=2,byrow=T) + matrix(c(1/3,30),nrow=9,ncol=2,byrow=T)
source('~/Git/DOE-code/adaptconcept.R')
outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g)}))
outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g)}))
outer(1:g,1:7,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g)}))
outer(1:g,-1:7,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g)}))
msfunc <- function(func1,xlim,ylima,b) {browser()
X1 <- simple.grid(10,2)
X1 <- X1*matrix(c(xlim[1],ylim[1]),nrow=nrow(X1),ncol=ncol(X1),byrow=T) + matrix(c(xlim[2],ylim[2]),nrow=nrow(X1),ncol=ncol(X1),byrow=T)
mean(apply(X1,1,func1)^2)
}
outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
msfunc <- function(func1,xlim,ylim,a,b) {browser()
X1 <- simple.grid(10,2)
X1 <- X1*matrix(c(xlim[1],ylim[1]),nrow=nrow(X1),ncol=ncol(X1),byrow=T) + matrix(c(xlim[2],ylim[2]),nrow=nrow(X1),ncol=ncol(X1),byrow=T)
mean(apply(X1,1,func1)^2)
}
outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
a
b
xlim
ylim
X1
a
b
xlim
ylim
X1
source('~/Git/DOE-code/adaptconcept.R')
outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
X1
a
b
xlim
ylim
X1
xlim
ylim
source('~/Git/DOE-code/adaptconcept.R')
outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
X1
plot(X1)
max(X1)
min(X1)
min(X1)
source('~/Git/DOE-code/LHS.R')
source('~/Git/DOE-code/adaptconcept.R')
outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
plot(X1)
summary(X1)
source('~/Git/DOE-code/adaptconcept.R')
outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
outer(1:g,-1,5,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
outer(1:g,-1:5,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
outer(1:g,-1:7,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
X
plot(X)
points(X)
points(X,19)
points(X,pch=19)
which.max(mses)
mses <- outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
which.max(mses)
mses
arrayInd(which.max(mses))
arrayInd(which.max(mses),.dim=dim(X))
which(mses==max(mses),arr.ind=T)
maxind.mses <- which(mses==max(mses),arr.ind=T)
rect(0,0,.2,.5)
rect((maxind.mses[1]-1)/g,(maxind.mses[1]-1)/g,(maxind.mses[1]-1)/g,(maxind.mses[1]-1)/g)
c((maxind.mses[1]-1)/g,(maxind.mses[1]-1)/g,(maxind.mses[1]-1)/g,(maxind.mses[1]-1)/g)
c((maxind.mses[1]-1)/g,(maxind.mses[2]-1)/g,(maxind.mses[1])/g,(maxind.mses[2])/g)
rect((maxind.mses[1]-1)/g,(maxind.mses[2]-1)/g,(maxind.mses[1])/g,(maxind.mses[2])/g)
rect((maxind.mses[1]-1)/g,(maxind.mses[2]-1)/g,(maxind.mses[1])/g,(maxind.mses[2])/g,lwd=10)
if (T & abcd) print(12)
if (T && abcd) print(12)
if (T || abcd) print(12)
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
g
source('~/Git/DOE-code/adaptconcept.R')
Xnew
Znew
X
Z
source('~/Git/DOE-code/adaptconcept.R')
maxmse
Xnew
source('~/Git/DOE-code/LHS.R')
msfunc <- function(func1,xlim,ylim,a,b) {browser()
X1 <- simple.grid(10,2)
X1 <- X1*matrix(c(xlim[2]-xlim[1],ylim[2]-ylim[1]),nrow=nrow(X1),ncol=ncol(X1),byrow=T) + matrix(c(xlim[1],ylim[1]),nrow=nrow(X1),ncol=ncol(X1),byrow=T)
mean(apply(X1,1,func1)^2)
}
mses <- outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
X1
X1*matrix(c(xlim[2]-xlim[1],ylim[2]-ylim[1]),nrow=nrow(X1),ncol=ncol(X1),byrow=T) + matrix(c(xlim[1],ylim[1]),nrow=nrow(X1),ncol=ncol(X1),byrow=T)
source('~/Git/DOE-code/LHS.R')
mses <- outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
source('~/Git/DOE-code/LHS.R')
mses <- outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
X1
X1
simple.grid(10,2,scaledto=rbind(xlim,ylim))
source('~/Git/DOE-code/LHS.R')
source('~/Git/DOE-code/LHS.R')
mses <- outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
X1
simple.grid(10,2,scaledto=rbind(xlim,ylim))
m
scaledto
source('~/Git/DOE-code/LHS.R')
mses <- outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
simple.grid(10,2,scaledto=rbind(xlim,ylim))
m
source('~/Git/DOE-code/LHS.R')
msfunc <- function(func1,xlim,ylim,a,b) {#browser()
X1 <- simple.grid(10,2)
X1 <- X1*matrix(c(xlim[2]-xlim[1],ylim[2]-ylim[1]),nrow=nrow(X1),ncol=ncol(X1),byrow=T) + matrix(c(xlim[1],ylim[1]),nrow=nrow(X1),ncol=ncol(X1),byrow=T)
print(summary(X1))
print(summary(simple.grid(10,2,rbind(xlim,ylim))))
mean(apply(X1,1,func1)^2)
}
mses <- outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
msfunc <- function(func1,xlim,ylim,a,b) {#browser()
X1 <- simple.grid(10,2)
X1 <- X1*matrix(c(xlim[2]-xlim[1],ylim[2]-ylim[1]),nrow=nrow(X1),ncol=ncol(X1),byrow=T) + matrix(c(xlim[1],ylim[1]),nrow=nrow(X1),ncol=ncol(X1),byrow=T)
print(summary(X1))
print(summary(simple.grid(10,2,scaledto=rbind(xlim,ylim))))
mean(apply(X1,1,func1)^2)
}
mses <- outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
msfunc <- function(func1,xlim,ylim,a,b) {#browser()
#X1 <- simple.grid(10,2)
#X1 <- X1*matrix(c(xlim[2]-xlim[1],ylim[2]-ylim[1]),nrow=nrow(X1),ncol=ncol(X1),byrow=T) + matrix(c(xlim[1],ylim[1]),nrow=nrow(X1),ncol=ncol(X1),byrow=T)
#print(summary(X1))
#print(summary(simple.grid(10,2,scaledto=rbind(xlim,ylim))))
X1 <- simple.grid(10,2,scaledto=rbind(xlim,ylim))
mean(apply(X1,1,func1)^2)
}
mses <- outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func,c(a-1,a)/g,c(b-1,b)/g,a,b)}))
mses
source('~/Git/DOE-code/adaptconcept.R')
abline(v=(2:3)/3)
abline(v=(1:2)/3)
abline(v=(1:2)/3+.1,h=(1:2)/3)
contourfilled.func(function(XX){predict.gp(mod,XX,se.fit = T)$se})
points(X,pch=19)
1:2/3
abline(v=1:2/3,h=1:2/3)
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
maxmse
level
xlim[1]+(xlim[2]-xlim[1])*c(maxind.mses[1]-1,maxind.mses[1])/g
ylim[1]+(ylim[2]-ylim[1])*c(maxind.mses[2]-1,maxind.mses[2])/g
Xnew
mses
outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func, xlim[1]+(xlim[2]-xlim[1])*c(a-1,a)/g , xlim[1]+(xlim[2]-xlim[1])*c(b-1,b)/g ,a,b)}))
outer(1:g,1:g,Vectorize(function(a,b){msfunc(mod.se.pred.func, xlim[1]+(xlim[2]-xlim[1])*c(a-1,a)/g , xlim[1]+(xlim[2]-xlim[1])*c(b-1,b)/g ,a,b)}))
maxind.mses
level
maxmse
maxmse.levelup
maxN <- function(x, N=2){
len <- length(x)
if(N>len){
warning('N greater than length(x).  Setting N=length(x)')
N <- length(x)
}
sort(x,partial=len-N+1)[len-N+1]
}
maxN(1:10)
source('~/Git/DOE-code/adaptconcept.R')
maxN(mses)
source('~/Git/DOE-code/adaptconcept.R')
maxmse
maxmse.ind
maxmses2[2]
maxmses2
maxN(mses)
mses
maxN(mses,3)
source('~/Git/DOE-code/adaptconcept.R')
maxmse
secondmaxmse
xlim
ylim
source('~/Git/DOE-code/adaptconcept.R')
secondmaxmse
maxmse.levelup
source('~/Git/DOE-code/adaptconcept.R')
level
maxmse
maxmse.levelup
level
level
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept.R')
maxmse
maxmse.levelup
xlim
ylim
