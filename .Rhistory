all(xx >= lims[,1], xx <= lims[,2])
}
msfunc <- function(func1,lims,pow=1L,batch=F) {#browser()
# Find mean square of function over limits using grid sample
X1 <- simple.grid(10,nrow(lims),scaledto=lims)
if(batch) {return(mean(func1(X1)^pow))}
mean(apply(X1,1,func1)^pow)
}
outer.inttoind <- function(i,a) {
i <- i-1
1+sapply(1:length(a),function(j){ifelse(j==1,i%%a[j],i%/%prod(a[1:(j-1)])%%a[j])})
}
outer.d1n <- function(...,func) {
a <- c(...)
b <- array(1:prod(a),dim=a)
apply(b,1:length(a),function(xx){func(outer.inttoind(xx,a))})
}
a$add_data()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3)
a$add_data()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3)
a$add_data()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3)
a$add_data()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3)
a$add_data()
Xnew
L
nrow(Xnew)
apply(Xnew,1,func)
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$add_data()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$add_data()
Znew
Xnew
a$X
a$Z
a$mod
a$mod$package
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$add_data()
a$X
a$mod$update()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$add_data()
a$X
a$mod$update()
a$mod$X
a$update_mod()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$add_data()
a$update_mod()
a$mod
T ||
F
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run1()
source("sFFLHD.R")
source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
source("adaptconcept.R")
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run1()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run1()
lims
D
g
L
outer.d1n(rep(g,D),
func=
(function(...){
ii <- c(...)
#msfunc(mod.se.pred.func, apply(lims,1,function(irow){irow[1]+()*c(ii)/g}))
msfunc(mod.se.pred.func,
lims=t(sapply(1:D,function(jj){
lims[jj,1]+(lims[jj,2]-lims[jj,1])*c(ii[jj]-1,ii[jj])/g
})),
pow=1,
batch=T
)
})
)
mod.se.pred.func()
mod.se.pred.func
msfunc
source('~/Git/DOE-code/adaptconcept.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run1()
mses.grid
X
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run1()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run1()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run1()
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run()
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(5)
level
maxmse
maxmse.levelup
length(maxmse.levelup)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(5)
a$run(10)
level
maxmse.levelup
sapply(1:(level-1),function(i){msfunc(mod.se.pred.func,lims.second[[i]])})
lims.second
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
msfunc(a$mod$predict.var)
msfunc(a$mod$predict.var,lims=cbind(rep(0,a$D),rep(1,a$D)))
cbind(rep(0,a$D),rep(1,a$D))
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
a$stats
a$plot
a$plot()
list(1:3,4:6,7:9)
unlist(list(1:3,4:6,7:9))
as.data.frame(list(1:3,4:6,7:9))
library(ggplot2)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(3)
statsdf
ggplot(statsdf, aes(x=iteration, y=mse, col=level)) + geom_line()
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(3)
a$run(3)
a$run(3)
rastimoid <- function(xx){sum(sin(2*pi*xx*3)) + 50/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(rastimoid)
rastimoid <- function(xx){sum(sin(2*pi*xx*3)) + 10/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(rastimoid)
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 10/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(sinumoid)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
msecalc(a$func,a$mod$predict)
a$mod$predict(c(.4,.,4))
a$mod$predict(c(.4,.4))
a$func(c(.4,.4))
sinumoid - sinumoid
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
msecalc(a$func,a$mod$predict,cbind(c(0,0),c(1,1)))
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
plot(1:5,data.frame(1:5,6:10))
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
statsdf
print(ggplot() +
geom_line(statsdf, aes(x=iteration, y=mse, col=level)) +
geom_line(statsdf, aes(x=iteration, y=pvar, col=level))
)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
print(ggplot() +
geom_line(data=statsdf, aes(x=iteration, y=mse, col=level)) +
geom_line(data=statsdf, aes(x=iteration, y=pvar, col=level))
)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
plot(1:5,type='b')
plot(1:5,6:10,type='b')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
plot(statsdf$iter, statsdf$mse, type='o')
plot(statsdf$iter, statsdf$mse)
plot(statsdf$iter, statsdf$mse)
plot(1:5)
statsdf
plot(statsdf$iter, statsdf$mse)
plot(statsdf$iter, statsdf$mse, type='o')
plot(statsdf$iter, statsdf$mse, type='l')
plot(statsdf$iter, statsdf$mse, lwd=4)
plot(6:8)
print(plot(6:8))
statsdf$iter
statsdf
iteration
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
statsdf
plot(stats$iteration)
plot
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
tm <- matrix(1:6,2,3)
tm
tm[1,]
tm[1,,drop=F]
tm[1,1,drop=F]
tm[,1,drop=F]
tm[,1:2,drop=F]
tm[,1:2,drop=T]
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(6)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(6)
par(mfrow=c(3,4))
plot(1:5)
plot(1:5)
plot(1:5)
plot(1:5)
plot(1:5)
split.screen(matrix(c(.5,.5,.5,.5),ncol=4,byrow=T))
matrix(c(.5,.5,.5,.5),ncol=4,byrow=T))
matrix(c(.5,.5,.5,.5),ncol=4,byrow=T)
split.screen(matrix(c(.5,.6,.7,.8),ncol=4,byrow=T))
plot(1:5)
par(mfrow=c(1,1))
split.screen(matrix(c(.5,.6,.7,.8),ncol=4,byrow=T))
plot(1:5)
par(bg = "white")           # default is likely to be transparent
split.screen(c(2, 1))       # split display into two screens
split.screen(c(1, 3), screen = 2) # now split the bottom half into 3
screen(1) # prepare screen 1 for output
plot(10:1)
screen(4) # prepare screen 4 for output
plot(10:1)
close.screen(all = TRUE)    # exit split-screen mode
par(bg = "white")           # default is likely to be transparent
split.screen(c(2, 1))       # split display into two screens
split.screen(c(1, 3), screen = 2) # now split the bottom half into 3
screen(1) # prepare screen 1 for output
plot(10:1)
screen(4) # prepare screen 4 for output
plot(10:1)
close.screen(all = TRUE)    # exit split-screen mode
split.screen(matrix(c(0,.5,0,1),ncol=4,byrow=T))
screen(1)
plot(1:5)
contourfilled.func(sinumoid)
screen(1)
plot(1:5)
screen(2)
split.screen(matrix(c(0,.5,0,1,  .5,1,0,1),ncol=4,byrow=T))
screen(2)
contourfilled.func(sinumoid)
split.screen(matrix(c(0,.5,0,1,  .5,1,0,1),ncol=4,byrow=T))
screen(1)
plot(1:5)
screen(2)
contourfilled.func(sinumoid)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
plot(1:5)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(30)
plot(1:5,log='y')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
split.screen(matrix(c(0,.5,.25,1,  .5,1,.25,1,  0,.5,0,.25, .5,1,0,.25),ncol=4,byrow=T))
screen(1)
screen(3)
plot(4:7)
screen(1)
plot(1:3)
screen(3)
par(mar=c(0,0,0,0))
plot(4:7)
screen(3)
par(mar=c(0,5,5,5))
plot(4:7)
par(mar=c(2,5,5,5))
plot(4:7)
screen(3)
par(mar=c(2,5,2,5))
plot(4:7)
split.screen(matrix(c(0,.5,.25,1,  .5,1,.25,1,  0,.5,0,.25, .5,1,0,.25),ncol=4,byrow=T))
screen(1)
plot(1:3)
screen(3)
par()$mar
screen(3)
par(mar=c(2,5,2,5)) # 5.1 4.1 4.1 2.1
plot(4:7)
par(mar=c(2,2,2,5)) # 5.1 4.1 4.1 2.1
plot(4:7)
screen(3)
par(mar=c(2,4,2,2)) # 5.1 4.1 4.1 2.1
plot(4:7)
screen(1)
plot(1:3)
screen(3)
par(mar=c(2,4,0,2)) # 5.1 4.1 4.1 2.1
plot(4:7)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(4)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(4)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
warnings()
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(4)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(20)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_helpers.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source("adaptconcept_helpers.R")
source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
source("adaptconcept_helpers.R")
source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
plot(1:2)
plot(as.integer(1:2))
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source("adaptconcept_helpers.R")
source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
View(s1)
source("adaptconcept_helpers.R")
source("sFFLHD.R")
source('LHS.R')
source('LHS.R')
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
source("adaptconcept_helpers.R")
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source("adaptconcept_helpers.R")
source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/.active-rstudio-document')
source('sFFLHD.R')
s <- sFFLHD(D = 3, L = 5)
source('~/Git/DOE-code/sFFLHD.R')
source('~/.active-rstudio-document')
plot(s$get.batch())
for(i in 1:5) points(s$get.batch())
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
mlegp::mlegp
mlegp::mlegp
mlegp::mlegp2
mlegp::mlegp
print(12)
invisible(print(12))
invisible(print(12))
capture.output(print(12))
tc <- capture.output(print(12))
tc
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
800*4/3
