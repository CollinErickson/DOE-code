)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
print(ggplot() +
geom_line(data=statsdf, aes(x=iteration, y=mse, col=level)) +
geom_line(data=statsdf, aes(x=iteration, y=pvar, col=level))
)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
plot(1:5,type='b')
plot(1:5,6:10,type='b')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
plot(statsdf$iter, statsdf$mse, type='o')
plot(statsdf$iter, statsdf$mse)
plot(statsdf$iter, statsdf$mse)
plot(1:5)
statsdf
plot(statsdf$iter, statsdf$mse)
plot(statsdf$iter, statsdf$mse, type='o')
plot(statsdf$iter, statsdf$mse, type='l')
plot(statsdf$iter, statsdf$mse, lwd=4)
plot(6:8)
print(plot(6:8))
statsdf$iter
statsdf
iteration
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
statsdf
plot(stats$iteration)
plot
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
tm <- matrix(1:6,2,3)
tm
tm[1,]
tm[1,,drop=F]
tm[1,1,drop=F]
tm[,1,drop=F]
tm[,1:2,drop=F]
tm[,1:2,drop=T]
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(6)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(6)
par(mfrow=c(3,4))
plot(1:5)
plot(1:5)
plot(1:5)
plot(1:5)
plot(1:5)
split.screen(matrix(c(.5,.5,.5,.5),ncol=4,byrow=T))
matrix(c(.5,.5,.5,.5),ncol=4,byrow=T))
matrix(c(.5,.5,.5,.5),ncol=4,byrow=T)
split.screen(matrix(c(.5,.6,.7,.8),ncol=4,byrow=T))
plot(1:5)
par(mfrow=c(1,1))
split.screen(matrix(c(.5,.6,.7,.8),ncol=4,byrow=T))
plot(1:5)
par(bg = "white")           # default is likely to be transparent
split.screen(c(2, 1))       # split display into two screens
split.screen(c(1, 3), screen = 2) # now split the bottom half into 3
screen(1) # prepare screen 1 for output
plot(10:1)
screen(4) # prepare screen 4 for output
plot(10:1)
close.screen(all = TRUE)    # exit split-screen mode
par(bg = "white")           # default is likely to be transparent
split.screen(c(2, 1))       # split display into two screens
split.screen(c(1, 3), screen = 2) # now split the bottom half into 3
screen(1) # prepare screen 1 for output
plot(10:1)
screen(4) # prepare screen 4 for output
plot(10:1)
close.screen(all = TRUE)    # exit split-screen mode
split.screen(matrix(c(0,.5,0,1),ncol=4,byrow=T))
screen(1)
plot(1:5)
contourfilled.func(sinumoid)
screen(1)
plot(1:5)
screen(2)
split.screen(matrix(c(0,.5,0,1,  .5,1,0,1),ncol=4,byrow=T))
screen(2)
contourfilled.func(sinumoid)
split.screen(matrix(c(0,.5,0,1,  .5,1,0,1),ncol=4,byrow=T))
screen(1)
plot(1:5)
screen(2)
contourfilled.func(sinumoid)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
plot(1:5)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(30)
plot(1:5,log='y')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(3)
split.screen(matrix(c(0,.5,.25,1,  .5,1,.25,1,  0,.5,0,.25, .5,1,0,.25),ncol=4,byrow=T))
screen(1)
screen(3)
plot(4:7)
screen(1)
plot(1:3)
screen(3)
par(mar=c(0,0,0,0))
plot(4:7)
screen(3)
par(mar=c(0,5,5,5))
plot(4:7)
par(mar=c(2,5,5,5))
plot(4:7)
screen(3)
par(mar=c(2,5,2,5))
plot(4:7)
split.screen(matrix(c(0,.5,.25,1,  .5,1,.25,1,  0,.5,0,.25, .5,1,0,.25),ncol=4,byrow=T))
screen(1)
plot(1:3)
screen(3)
par()$mar
screen(3)
par(mar=c(2,5,2,5)) # 5.1 4.1 4.1 2.1
plot(4:7)
par(mar=c(2,2,2,5)) # 5.1 4.1 4.1 2.1
plot(4:7)
screen(3)
par(mar=c(2,4,2,2)) # 5.1 4.1 4.1 2.1
plot(4:7)
screen(1)
plot(1:3)
screen(3)
par(mar=c(2,4,0,2)) # 5.1 4.1 4.1 2.1
plot(4:7)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(4)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(4)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
warnings()
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(4)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(20)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_helpers.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source("adaptconcept_helpers.R")
source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
source("adaptconcept_helpers.R")
source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
plot(1:2)
plot(as.integer(1:2))
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source("adaptconcept_helpers.R")
source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
View(s1)
source("adaptconcept_helpers.R")
source("sFFLHD.R")
source('LHS.R')
source('LHS.R')
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
source("adaptconcept_helpers.R")
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source("adaptconcept_helpers.R")
source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/.active-rstudio-document')
source('sFFLHD.R')
s <- sFFLHD(D = 3, L = 5)
source('~/Git/DOE-code/sFFLHD.R')
source('~/.active-rstudio-document')
plot(s$get.batch())
for(i in 1:5) points(s$get.batch())
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
mlegp::mlegp
mlegp::mlegp
mlegp::mlegp2
mlegp::mlegp
print(12)
invisible(print(12))
invisible(print(12))
capture.output(print(12))
tc <- capture.output(print(12))
tc
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
800*4/3
dir()
dir('..')
setwd('adaptconcept_sFFLHD_RC_presentation/')
# Chunk 1
#setwd('./..')
source('../sFFLHD.R')
# Chunk 2
s <- sFFLHD.seq(D = 3, L = 5)
s$get.batch()
# Chunk 3
s <- sFFLHD.seq(D = 2, L = 5)
plot(NULL, xlim=0:1, ylim=0:1)
abline(h=(0:5)/5, v=(0:5)/5)
for(i in 1:5) points(s$get.batch(), col=i, pch=19)
# Chunk 4
s <- sFFLHD.seq(D = 2, L = 3)
l <- 9
plot(NULL, xlim=0:1, ylim=0:1)
abline(h=(0:l)/l, v=(0:l)/l)
for(i in 1:27) points(s$get.batch(), col=i, pch=19)
# Chunk 5
source("../adaptconcept_sFFLHD_RC.R")
source("../adaptconcept_sFFLHD_RC.R")
dir('..')
# Chunk 6
source("../adaptconcept_sFFLHD_RC.R")
source("../adaptconcept_helpers.R")
#source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('../LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
# Chunk 7
contourfilled.func(gaussian1)
# Chunk 8
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(1)
# Chunk 9
a$run(1)
# Chunk 10
a$run(1)
# Chunk 11
a$run(1)
# Chunk 12
a$run(1)
# Chunk 13
a$run(1)
# Chunk 14
a$run(1)
# Chunk 15
a$run(1)
# Chunk 16
a$run(1)
# Chunk 17
a$run(1)
# Chunk 18
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-80*(xx[[1]]-.5)))}
# Chunk 19
contourfilled.func(sinumoid)
# Chunk 20
a <- adapt.concept.sFFLHD.RC(D=2,L=4,g=3,func=sinumoid)
a$run(1)
# Chunk 21
a$run(1)
# Chunk 22
a$run(1)
# Chunk 23
a$run(1)
# Chunk 24
a$run(1)
# Chunk 25
a$run(1)
# Chunk 26
a$run(1)
# Chunk 27
a$run(1)
# Chunk 28
a$run(1)
# Chunk 29
a$run(1)
list.files()
getwd()
setwd('adaptconcept_sFFLHD_RC_presentation/')
list.files('..')
source("../adaptconcept_sFFLHD_RC.R")
source("../adaptconcept_sFFLHD_RC.R")
source("../adaptconcept_sFFLHD_RC.R")
file.choose()
source( "/Users/collin/Git/DOE-code/adaptconcept_sFFLHD_RC.R")
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source("adaptconcept_helpers.R")
#source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=gaussian1)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(3)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a$run(10)
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 10/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(sinumoid)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(sinumoid)
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(sinumoid)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=3,L=6,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=3,L=8,g=3,func=gaussian1)
a$run(3)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=3,L=8,g=3,func=gaussian1)
a$run(3)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=3,L=8,g=3,func=gaussian1)
a$run(3)
a$run(3)
a$run(3)
a <- adapt.concept.sFFLHD.RC(D=3,L=8,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=3,L=8,g=3,func=gaussian1)
a$run(3)
a$run(3)
a$run(3)
a$run(3)
a$run(3)
pairs(a$X   )
install.packages("shiny")
??shiny
setwd("~/Git/DOE-code/shiny")
shiny::runApp('sFFLHD')
runApp()
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
system.time()
time()
Sys.time()
Sys.time()
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
rep(4:6,1:3)
rep(4:6,3)
sapply(1:4,function(ii){rep(i,3)})
sapply(1:4,function(ii){rep(ii,3)})
c(sapply(1:4,function(ii){rep(ii,3)}))
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD')
