a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(3)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a$run(10)
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 10/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(sinumoid)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(sinumoid)
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(sinumoid)
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=5,g=3,func=sinumoid)
a$run(10)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=3,L=6,g=3,func=gaussian1)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=3,L=8,g=3,func=gaussian1)
a$run(3)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=3,L=8,g=3,func=gaussian1)
a$run(3)
a$run(3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=3,L=8,g=3,func=gaussian1)
a$run(3)
a$run(3)
a$run(3)
a <- adapt.concept.sFFLHD.RC(D=3,L=8,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=3,L=8,g=3,func=gaussian1)
a$run(3)
a$run(3)
a$run(3)
a$run(3)
a$run(3)
pairs(a$X   )
install.packages("shiny")
??shiny
setwd("~/Git/DOE-code/shiny")
shiny::runApp('sFFLHD')
runApp()
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
system.time()
time()
Sys.time()
Sys.time()
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
rep(4:6,1:3)
rep(4:6,3)
sapply(1:4,function(ii){rep(i,3)})
sapply(1:4,function(ii){rep(ii,3)})
c(sapply(1:4,function(ii){rep(ii,3)}))
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD_2')
runApp('sFFLHD')
shiny::runApp('shiny/sFFLHD')
runApp('shiny/sFFLHD')
runApp('shiny/sFFLHD')
runApp('shiny/sFFLHD')
runApp('shiny/sFFLHD')
runApp('shiny/sFFLHD')
runApp('shiny/sFFLHD')
runApp('shiny/sFFLHD')
runApp('shiny/sFFLHD')
runApp('shiny/sFFLHD')
runApp('shiny/sFFLHD')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source("adaptconcept_helpers.R")
#source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(10)
source('~/Git/DOE-code/sFFLHD.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(10)
pp <- plot(1:5)
str(pp)
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
diagonal_sigmoid <- function(xx){sum(xx) > length(xx) / 2}
contourfilled.func(diagonal_sigmoid())
contourfilled.func(diagonal_sigmoid)
curve(diagonal_sigmoid)
curve(function(a) apply(a,1,diagonal_sigmoid))
curve(apply(x,1,diagonal_sigmoid))
curve(function(a) Vectorize(diagonal_sigmoid))
curve(function(a) Vectorize(diagonal_sigmoid(a)))
curve(Vectorize(diagonal_sigmoid))
runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(5)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(5)
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(5)
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=sinumoid)
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(sinumoid)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=sinumoid)
a$run(10)
runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source("adaptconcept_helpers.R")
#source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
a$run(2)
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
adapt.concept.sFFLHD.RC()
adapt.concept.sFFLHD.RC(D=2,L=3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
adapt.concept.sFFLHD.RC(D=2,L=3)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
shiny::runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
?setOldClass
runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
runApp('shiny/adaptconcept_sFLHD_RC')
source('sFFLHD.R')
library("UGP")
source("adaptconcept_helpers.R")
#source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
mod
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
shiny::runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
shiny::runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('sFFLHD.R')
library("UGP")
source("adaptconcept_helpers.R")
#source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
a$run1(plotit = F)
a$run1(plotit = T)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
a$run(2,plotlastonly = T)
a$run(3,plotlastonly = T)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
system.time({a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1); a$run(10,plotlastonly = T)})
system.time({a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1); a$run(10,plotlastonly = F)})
a$run(1,plotlastonly = T)
runApp('shiny/adaptconcept_sFLHD_RC')
shiny::runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('sFFLHD.R')
library("UGP")
source("adaptconcept_helpers.R")
#source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
shiny::runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('sFFLHD.R')
library("UGP")
source("adaptconcept_helpers.R")
#source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
shiny::runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
contourfilled.func(gaussian1)
contourfilled.func(gaussian1,pretitle = 'abc')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
lims.nextsecond
get_mses_out
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(1)
runApp('shiny/adaptconcept_sFLHD_RC')
msfunc
View(msfunc)
maxgridfunc(gaussian1)
source('~/Git/DOE-code/adaptconcept_helpers.R')
maxgridfunc(gaussian1)
maxgridfunc(gaussian1,c(0,1))
maxgridfunc(gaussian1,matrix(c(0,0,1,1),2,2)
)
maxgridfunc(gaussian1,matrix(c(0,0,1,1),2,2))
maxgridfunc(gaussian1,matrix(c(0,0,1,1),2,2))
maxgridfunc(gaussian1,matrix(c(0,0,1,1),2,2))
maxgridfunc(sinumoid,matrix(c(0,0,1,1),2,2))
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-80*(xx[[1]]-.5)))}; contourfilled.func(sinumoid)
maxgridfunc(sinumoid,matrix(c(0,0,1,1),2,2))
maxgridfunc(sinumoid,matrix(c(0,0,1,1),2,2))
maxgridfunc(sinumoid,matrix(c(0,0,1,1),2,2))
maxgridfunc(sinumoid,matrix(c(0,0,1,1),2,2))
maxgridfunc(sinumoid,matrix(c(0,0,1,1),2,2))
maxgridfunc(sinumoid,matrix(c(0,0,1,1),2,2))
maxgridfunc(sinumoid,matrix(c(0,0,1,1),2,2))
maxgridfunc(sinumoid,matrix(c(0,0,1/2,1/2),2,2))
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1,obj="maxerr")
a$run(2)
a$run(2)
a$run(2)
a$run(1)
a$run(1)
a$run(1)
tl <- list()
tl$a <- NULL
tl
tl$a
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a$run(2)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1,obj="maxerr")
a$run(1)
a$run(1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(2)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(1)
a$run(1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(1)
a$run(1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a$run(1)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1, obj="maxerr")
a$run(1)
a$run(1)
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1, obj="maxerr")
a$run(1)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1, obj="maxerr")
a$run(1)
maxmse.ind
maxmse.ind[2]
lims.next
lims.next[2,]
lims.next[maxmse.ind[2],]
lims[maxmse.ind[2],1]
(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
lims.next[maxmse.ind[2],] <- lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1, obj="maxerr")
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1, obj="maxerr")
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1, obj="maxerr")
a$run(1)
lims[maxmse.ind[2],1]+(lims[maxmse.ind[2],2]-lims[maxmse.ind[2],1])*c(maxmse.ind[1]-1,maxmse.ind[1])/g
source('~/Git/DOE-code/adaptconcept_sFFLHD_RC.R')
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1, obj="maxerr")
a$run(8,plotlastonly = T)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1, obj="maxerr")
a$run(8,plotlastonly = T)
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1, obj="maxerr")
a$run(8,plotlastonly = T)
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
runApp('shiny/adaptconcept_sFLHD_RC')
scale(1:5,2)
scale(1:5,2,F)
scale(1:5,2,2)
scale(1:5,2,1:5)
scale(matrix(1:5,1),2,1:5)
scale(matrix(1:5,1),rep(2,5),1:5)
scale(matrix(1:5,1),rep(2,5),1:5)[3]
shiny::runApp('shiny/adaptconcept_sFLHD_RC')
