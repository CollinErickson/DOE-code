Adaptive sFFLHD sampling concept
========================================================
author: Collin Erickson
date: 7/13/2016
autosize: true
width: 1920
height: 1080

What I've worked on
=====================

- Implemented sFFLHD
- Adaptive sampling concept
 - Sample, then focus on subregion or return up level
- Combined these two to get adaptive sFFLHD sampling

sFFLHD
================

```{r, message=FALSE, warning=FALSE, include=FALSE, print=F, results="hide"}
#setwd('./..')
source('../sFFLHD.R')
```

```{r}
s <- sFFLHD.seq(D = 3, L = 5)
s$get.batch()
```

sFFLHD plot test
=============== 
```{r}
s <- sFFLHD.seq(D = 2, L = 5)
plot(NULL, xlim=0:1, ylim=0:1)
abline(h=(0:5)/5, v=(0:5)/5)
for(i in 1:5) points(s$get.batch(), col=i, pch=19)
```

***


```{r}
s <- sFFLHD.seq(D = 2, L = 3)
l <- 9
plot(NULL, xlim=0:1, ylim=0:1)
abline(h=(0:l)/l, v=(0:l)/l)
for(i in 1:27) points(s$get.batch(), col=i, pch=19)
```

Can't open file adaptconcept_sFFLHD_RC.R (others are fine), if want to run it have to move files
==========================
```{r}
#source("../adaptconcept_sFFLHD_RC.R")
#source("../adaptconcept_sFFLHD_RC.R")
list.files('..')
dir('..')
```


Example: Gaussian
================

```{r,echo=F}
#source("../adaptconcept_sFFLHD_RC.R")
source( "/Users/collin/Git/DOE-code/adaptconcept_sFFLHD_RC.R")
source("../adaptconcept_helpers.R")
#source("sFFLHD.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('../LHS.R')
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.1)
```

Actual function: Gaussian

```{r}
contourfilled.func(gaussian1)
```


Adaptive sFFLHD
===============
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a <- adapt.concept.sFFLHD.RC(D=2,L=3,g=3,func=gaussian1)
a$run(1)
```

a2
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```


a3
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```

a4
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```

a5
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```


a6
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```

a7
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```

a8
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```

a9
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```

a10
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```


















Example: Sinumoid
================

```{r,echo=F}
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-80*(xx[[1]]-.5)))}
```

Actual function: Sinusoid with a plateau

```{r}
contourfilled.func(sinumoid)
```


Adaptive sFFLHD
===============
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a <- adapt.concept.sFFLHD.RC(D=2,L=4,g=3,func=sinumoid)
a$run(1)
```

a2
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```


a3
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```

a4
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```

a5
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```


a6
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```

a7
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```

a8
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```

a9
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```

a10
===========
title: FALSE

```{r, echo=F, fig.width=8,fig.height=4.5, dpi=300, out.width="1280px",out.height="800px"}
a$run(1)
```