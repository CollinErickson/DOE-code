NPS Lab Tour
========================================================
author: Collin Erickson
date: 8/2/16
autosize: true

Design of Experiments / Simulation
========================
- Suppose you can simulate a battle
- There are many variables: Red/blue, # soldiers, # ammo
- You want to understand what the result of simulation will be
- But a single simulation takes hours to run


=========
```{r, echo=FALSE}
plot(NULL, xlab="Red soldiers", ylab="Blue soldiers", xlim=c(0,100), ylim=c(0,100), cex.lab=1.5)
text(50,50,"?", cex=30)
```


=========
```{r, echo=FALSE}
set.seed(0)
xlhs <- lhs::maximinLHS(10,2) * 100
plot(NULL, xlab="Red soldiers", ylab="Blue soldiers", xlim=c(0,100), ylim=c(0,100), cex.lab=1.5)
text(xlhs[,1], xlhs[,2], "?", cex=3)
```


=========
```{r, echo=FALSE}
#xlhs <- lhs::maximinLHS(10,2) * 100
plot(NULL, xlab="Red soldiers", ylab="Blue soldiers", xlim=c(0,100), ylim=c(0,100), cex.lab=1.5)
points(xlhs[,1], xlhs[,2], pch=19, cex=3)
text(50, 20, "?", cex=3, col=2)
```


Sequential simulation
========
- Run n simulations
- Fit a model that lets you predict at other points
- Pick new simulations to run: which points do you want to add?
  - Add points where predictions are most uncertain
- Repeat



========
```{r, echo=F}
setwd("..")
```


```{r, echo=F}
source('/Users/collin/git/DOE-code/sFFLHD.R')
source("/Users/collin/git/DOE-code/adaptconcept2_sFFLHD_RC.R")
library("UGP")
source("/Users/collin/git/DOE-code/adaptconcept_helpers.R")
require(mlegp)
require(GPfit)
require(contourfilled)
source('/Users/collin/git/DOE-code/LHS.R')
source("/Users/collin/git/DOE-code/RFF_test.R")
source("/Users/collin/git/SMED-Code/SMED_select.R")
```

```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
par(mfrow=c(1,2))
gaussian1 <- function(xx) exp(-sum((xx-.5)^2)/2/.01)
contourfilled::contourfilled.func(gaussian1)
x <- seq(0, 1, length= 30)
y <- x
#f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, Vectorize(function(x,y)gaussian1(c(x,y))))
persp(x,y,z)
par(mfrow=c(1,1))
```


==========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="mse", n0=6)
a$run(1)
```


==========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
a$run(3, plotlastonly=T)
```


==========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
a$run(5, plotlastonly=T)
```


==========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=gaussian1, obj="grad", n0=6)
a$run(1)
```


==========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
a$run(3, plotlastonly=T)
```


==========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
a$run(5, plotlastonly=T)
```



===========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
par(mfrow=c(1,2))
sinumoid <- function(xx){sum(sin(2*pi*xx*3)) + 20/(1+exp(-80*(xx[[1]]-.5)))}
contourfilled.func(sinumoid)
x <- seq(0, 1, length= 30)
y <- x
z <- outer(x, y, Vectorize(function(x,y)sinumoid(c(x,y))))
persp(x,y,z)
par(mfrow=c(1,1))
```


==========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=sinumoid, obj="mse", n0=6)
a$run(1)
```


==========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
a$run(3, plotlastonly=T)
```


==========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
a$run(5, plotlastonly=T)
```



==========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
a <- adapt.concept2.sFFLHD.RC(D=2,L=3,func=sinumoid, obj="grad", n0=6)
a$run(1)
```


==========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
a$run(3, plotlastonly=T)
```


==========
```{r, echo=FALSE, fig.width=10.67,fig.height=6, dpi=300, out.width="1280px",out.height="800px"}
a$run(5, plotlastonly=T)
```